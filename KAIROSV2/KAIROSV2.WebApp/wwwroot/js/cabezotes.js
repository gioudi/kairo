/*! For license information please see cabezotes.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.sample=t():e.sample=t()}(self,(function(){return(()=>{"use strict";var e={"./Scripts/Pages/Cabezotes/Cabezotes.ts":function(e,t,o){var n=this&&this.__awaiter||function(e,t,o,n){return new(o||(o=Promise))((function(a,r){function i(e){try{c(n.next(e))}catch(e){r(e)}}function s(e){try{c(n.throw(e))}catch(e){r(e)}}function c(e){var t;e.done?a(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(i,s)}c((n=n.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var o,n,a,r,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(o)throw new TypeError("Generator is already executing.");for(;i;)try{if(o=1,n&&(a=2&r[0]?n.return:r[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,r[1])).done)return a;switch(n=0,a&&(r=[2&r[0],a.value]),r[0]){case 0:case 1:a=r;break;case 4:return i.label++,{value:r[1],done:!1};case 5:i.label++,n=r[1],r=[0];continue;case 7:r=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==r[0]&&2!==r[0])){i=0;continue}if(3===r[0]&&(!a||r[1]>a[0]&&r[1]<a[3])){i.label=r[1];break}if(6===r[0]&&i.label<a[1]){i.label=a[1],a=r;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(r);break}a[2]&&i.ops.pop(),i.trys.pop();continue}r=t.call(e,i)}catch(e){r=[6,e],n=0}finally{o=a=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.CabezotesPage=void 0;var r=o("./Scripts/Shared/index.ts"),i=o("./Scripts/Shared/Components/ConfirmModalMessage.ts"),s=o("./Scripts/Shared/Components/ConfigureDataTable.ts"),c=o("./Scripts/Pages/Cabezotes/GestionCabezotes.ts"),l=o("./Scripts/Shared/Utils/JQValidations.ts"),d=function(){function e(){this.Init()}return e.prototype.Destroy=function(){this.Table.destroy(!1)},e.prototype.Init=function(){this.InicializarButtons(),this.InicializarControls()},e.prototype.InicializarControls=function(){var e=this;this.Table=(new s.ConfigureDataTable).Configure("#data-table-cabezote",[{width:"50%",targets:0}]),this.gestionCabezotes=new c.CabezotesGestionPage(document.getElementById("cabezote-modal")),this.gestionCabezotes.onCabezoteCreado=function(t){return e.AgregarFilaDatatable(t)},l.JQValidations.MaxFileSizeValidation(),l.JQValidations.AllowedExtensionsValidation()},e.prototype.InicializarButtons=function(){var e=this,t=document.getElementById("data-table-cabezote"),o=document.getElementById("cabezote-add");t.on("click",".cabezote-action",(function(t){t.target.matches(".cabezote-delete")&&e.BorrarCabezote(t.target)})),o.addEventListener("click",(function(t){return e.CrearCabezote()}))},e.prototype.BorrarCabezote=function(e){return n(this,void 0,void 0,(function(){var t,o=this;return a(this,(function(n){switch(n.label){case 0:return t=e.dataset.cabezoteid,[4,new i.ConfirmModalMessage("Eliminar Cabezote","¿Desea eliminar el Cabezote "+t+"?","Aceptar","Cancelar").Confirm()];case 1:return n.sent()&&(new r.HttpFetchService).Post("/Cabezotes/BorrarCabezote",t).then((function(t){t.Result&&o.BorrarFilaDatatable(e),M.toast({html:t.Message,classes:t.Result?"succes":"error"})})).catch((function(e){M.toast({html:e,classes:"error"})})),[2]}}))}))},e.prototype.CrearCabezote=function(){this.gestionCabezotes.NuevoCabezote()},e.prototype.BorrarFilaDatatable=function(e){var t=$(e).closest("tr");if(t.prev().hasClass("parent")){var o=this.Table.row(t.prev());o.remove(),o.draw()}var n=this.Table.row(t);n.remove(),n.draw()},e.prototype.AgregarFilaDatatable=function(e){this.Table.row.add([e.Placa,'<a href="#" data-turbolinks="false"><i class="material-icons cabezote-action cabezote-delete" data-cabezoteid="'+e.Placa+'">delete</i></a> ']).draw(!1)},e}();t.CabezotesPage=d;var u=new d;document.addEventListener("turbolinks:render",(function(e){-1!=document.URL.indexOf("/Cabezotes/Index")?u?u.Init():u=new d:null==u||u.Destroy()}))},"./Scripts/Pages/Cabezotes/GestionCabezotes.ts":(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CabezotesGestionPage=void 0;var n=o("./Scripts/Shared/index.ts"),a=o("./Scripts/Shared/Models/Cabezote.ts"),r=function(){function e(e){this._baseUrl="/Cabezotes",this._httpService=new n.HttpFetchService,this._modalBase=e,this.InicializarModal()}return e.prototype.NuevoCabezote=function(){var e=this;this._httpService.Post(this._baseUrl+"/NuevoCabezote",null,!1).then((function(t){e._modalBase.innerHTML=t,e.InicilizarFormCabezote()})),this._modalInstance.open()},e.prototype.GuardarCabezote=function(){var e,t=this,o=null===(e=this._formData.get("RequestVerificationToken"))||void 0===e?void 0:e.toString();this._httpService.PostForm(this._baseUrl+"/CrearCabezote",this._formData,o).then((function(e){e.Result&&(t.LimpiarFormulario(),t.onCabezoteCreado&&t.onCabezoteCreado(t.ExtraerCabezote())),M.toast({html:e.Message,classes:e.Result?"succes":"error"})})).catch((function(e){return console.log(e)}))},e.prototype.InicializarModal=function(){this._modalInstance=M.Modal.init(this._modalBase,{dismissible:!1,opacity:.5,inDuration:300,outDuration:200,startingTop:"6%",endingTop:"8%"})},e.prototype.InicilizarFormCabezote=function(){var e=this;M.updateTextFields(),this._formCabezote=document.querySelector("#cabezote-form"),this._formData=new FormData(this._formCabezote),$(this._formCabezote).removeData("validator").removeData("unobtrusiveValidation"),$.validator.unobtrusive.parse(this._formCabezote),document.getElementById("cabezote-modal-cancel").addEventListener("click",(function(t){return e.CerrarModal()})),this._formCabezote.onsubmit=function(t){return t.preventDefault(),$(e._formCabezote).valid()&&(e._formData=new FormData(e._formCabezote),e.GuardarCabezote()),!1}},e.prototype.ExtraerCabezote=function(){var e,t=new a.Cabezote;return t.Placa=null===(e=this._formData.get("Placa"))||void 0===e?void 0:e.toString(),t},e.prototype.LimpiarFormulario=function(){this._formCabezote.reset(),$("#cabezote-id").val(null).trigger("change"),M.updateTextFields()},e.prototype.CerrarModal=function(){this._modalInstance.close(),this._formCabezote.parentNode.removeChild(this._formCabezote)},e}();t.CabezotesGestionPage=r},"./Scripts/Shared/Components/ConfigureDataTable.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigureDataTable=void 0;var o=function(){function e(){}return e.prototype.Configure=function(e,t){var o=$(e).DataTable({columnDefs:t,responsive:!0,language:{processing:"Procesando...",lengthMenu:"Mostrar _MENU_ registros",zeroRecords:"No se encontraron resultados",emptyTable:"Ningún dato disponible en esta tabla",info:"Mostrando del _START_ al _END_ de _TOTAL_ registros",infoEmpty:"Mostrando del 0 al 0 de 0 registros",infoFiltered:"(filtrado de un total de _MAX_ registros)",search:"Buscar:",thousands:",",loadingRecords:"Cargando...",paginate:{first:"Primero",last:"Último",next:"Siguiente",previous:"Anterior"},aria:{sortAscending:": Activar para ordenar la columna de manera ascendente",sortDescending:": Activar para ordenar la columna de manera descendente"}}});return this.FilterGlobal(o),o},e.prototype.FilterGlobal=function(e){$("input#global_filter").on("keyup click",(function(){e.search($("#global_filter").val().toString(),$("#global_regex").prop("checked"),$("#global_smart").prop("checked")).draw()})),$("input.column_filter").on("keyup click",(function(){var t=$(this).parents("tr").attr("data-column");e.column(t).search($("#col"+t+"_filter").val().toString(),$("#col"+t+"_regex").prop("checked"),$("#col"+t+"_smart").prop("checked")).draw()}))},e}();t.ConfigureDataTable=o},"./Scripts/Shared/Components/ConfirmModalMessage.ts":function(e,t){var o=this&&this.__awaiter||function(e,t,o,n){return new(o||(o=Promise))((function(a,r){function i(e){try{c(n.next(e))}catch(e){r(e)}}function s(e){try{c(n.throw(e))}catch(e){r(e)}}function c(e){var t;e.done?a(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(i,s)}c((n=n.apply(e,t||[])).next())}))},n=this&&this.__generator||function(e,t){var o,n,a,r,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(o)throw new TypeError("Generator is already executing.");for(;i;)try{if(o=1,n&&(a=2&r[0]?n.return:r[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,r[1])).done)return a;switch(n=0,a&&(r=[2&r[0],a.value]),r[0]){case 0:case 1:a=r;break;case 4:return i.label++,{value:r[1],done:!1};case 5:i.label++,n=r[1],r=[0];continue;case 7:r=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==r[0]&&2!==r[0])){i=0;continue}if(3===r[0]&&(!a||r[1]>a[0]&&r[1]<a[3])){i.label=r[1];break}if(6===r[0]&&i.label<a[1]){i.label=a[1],a=r;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(r);break}a[2]&&i.ops.pop(),i.trys.pop();continue}r=t.call(e,i)}catch(e){r=[6,e],n=0}finally{o=a=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.ConfirmModalMessage=void 0;var a=function(){function e(e,t,o,n){this.title=e,this.message=t,this.acceptText=o,this.dismissText=n,this.idMesssage="confirm-message",this.parent=document.body,this.CreateModal(),this.AppendModel()}return e.prototype.CreateModal=function(){this.modal=document.createElement("div"),this.modal.id=this.idMesssage,this.modal.classList.add("modal","modal-fixed-footer","modal-confirm-message-small");var e=document.createElement("div");e.classList.add("modal-content"),this.modal.appendChild(e);var t=document.createElement("h5");t.textContent=this.title,e.appendChild(t);var o=document.createElement("p");o.textContent=this.message,e.appendChild(o);var n=document.createElement("div");n.classList.add("modal-footer"),this.modal.appendChild(n),this.dismissButton=document.createElement("button"),this.dismissButton.classList.add("modal-action","waves-effect","waves-red","btn-flat","btn-orange"),this.dismissButton.type="button",this.dismissButton.textContent=this.dismissText,n.appendChild(this.dismissButton),this.acceptButton=document.createElement("button"),this.acceptButton.classList.add("modal-action","waves-effect","waves-red","btn-flat","btn-orange"),this.acceptButton.type="button",this.acceptButton.textContent=this.acceptText,n.appendChild(this.acceptButton)},e.prototype.AppendModel=function(){this.parent.appendChild(this.modal)},e.prototype.destroy=function(){this.modalInstance&&(this.modalInstance.close(),this.modalInstance.destroy());var e=document.querySelector("#"+this.idMesssage);e.parentNode.removeChild(e)},e.prototype.Confirm=function(){return o(this,void 0,void 0,(function(){var e=this;return n(this,(function(t){return[2,new Promise((function(t,o){(!e.modal||!e.acceptButton||!e.dismissButton)&&(e.destroy(),o("Fallo algo en la creación del mensaje")),M.Modal.init(e.modal,{dismissible:!1,opacity:.5,inDuration:300,outDuration:200,startingTop:"6%",endingTop:"8%"}),e.modalInstance=M.Modal.getInstance(e.modal),e.modalInstance.open(),e.acceptButton.addEventListener("click",(function(){t(!0),e.destroy()})),e.dismissButton.addEventListener("click",(function(){t(!1),e.destroy()}))}))]}))}))},e}();t.ConfirmModalMessage=a},"./Scripts/Shared/Http/HttpFetchService.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.HttpFetchService=void 0;var o=function(){function e(){}return e.prototype.Post=function(e,t,o){return void 0===o&&(o=!0),new Promise((function(n,a){fetch(e,{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then((function(e){return o?e.json():e.text()})).then((function(e){n(e)})).catch((function(e){console.log(e),a(e)}))}))},e.prototype.PostForm=function(e,t,o){return new Promise((function(n,a){fetch(e,{method:"post",headers:{RequestVerificationToken:o},body:t}).then((function(e){return e.json()})).then((function(e){n(e)})).catch((function(e){console.log(e),a(e)}))}))},e.prototype.PostFormURL=function(e,t,o){return void 0===o&&(o=!0),new Promise((function(n,a){fetch(e,{method:"post",headers:{"Content-Type":"application/json"},body:t}).then((function(e){return o?e.json():e.text()})).then((function(e){n(e)})).catch((function(e){console.log(e),a(e)}))}))},e}();t.HttpFetchService=o},"./Scripts/Shared/Http/index.ts":function(e,t,o){var n=this&&this.__createBinding||(Object.create?function(e,t,o,n){void 0===n&&(n=o),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[o]}})}:function(e,t,o,n){void 0===n&&(n=o),e[n]=t[o]}),a=this&&this.__exportStar||function(e,t){for(var o in e)"default"===o||Object.prototype.hasOwnProperty.call(t,o)||n(t,e,o)};Object.defineProperty(t,"__esModule",{value:!0}),t.services=void 0;var r=o("./Scripts/Shared/Http/HttpFetchService.ts");t.services=[r.HttpFetchService],a(o("./Scripts/Shared/Http/HttpFetchService.ts"),t)},"./Scripts/Shared/Models/Area.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Area=void 0;t.Area=function(){}},"./Scripts/Shared/Models/Cabezote.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Cabezote=void 0;t.Cabezote=function(){}},"./Scripts/Shared/Models/Conductor.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Conductor=void 0;t.Conductor=function(){}},"./Scripts/Shared/Models/Linea.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Linea=void 0;t.Linea=function(){}},"./Scripts/Shared/Models/Log.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Log=void 0;t.Log=function(){}},"./Scripts/Shared/Models/MessageResponse.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0})},"./Scripts/Shared/Models/Trailer.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Trailer=void 0;t.Trailer=function(){}},"./Scripts/Shared/Models/Usuario.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Usuario=void 0;t.Usuario=function(){}},"./Scripts/Shared/Models/index.ts":function(e,t,o){var n=this&&this.__createBinding||(Object.create?function(e,t,o,n){void 0===n&&(n=o),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[o]}})}:function(e,t,o,n){void 0===n&&(n=o),e[n]=t[o]}),a=this&&this.__exportStar||function(e,t){for(var o in e)"default"===o||Object.prototype.hasOwnProperty.call(t,o)||n(t,e,o)};Object.defineProperty(t,"__esModule",{value:!0}),t.models=void 0;var r=o("./Scripts/Shared/Models/Usuario.ts"),i=o("./Scripts/Shared/Models/Cabezote.ts"),s=o("./Scripts/Shared/Models/Trailer.ts"),c=o("./Scripts/Shared/Models/Conductor.ts"),l=o("./Scripts/Shared/Models/Area.ts"),d=o("./Scripts/Shared/Models/Log.ts"),u=o("./Scripts/Shared/Models/Linea.ts");t.models=[r.Usuario,i.Cabezote,s.Trailer,c.Conductor,l.Area,d.Log,u.Linea],a(o("./Scripts/Shared/Models/MessageResponse.ts"),t),a(o("./Scripts/Shared/Models/Usuario.ts"),t),a(o("./Scripts/Shared/Models/Cabezote.ts"),t),a(o("./Scripts/Shared/Models/Trailer.ts"),t),a(o("./Scripts/Shared/Models/Conductor.ts"),t),a(o("./Scripts/Shared/Models/Area.ts"),t),a(o("./Scripts/Shared/Models/Log.ts"),t),a(o("./Scripts/Shared/Models/Linea.ts"),t)},"./Scripts/Shared/Utils/HTMLExtensions.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),HTMLElement.prototype.on=function(e,t,o){this.addEventListener(e,(function(e){e.target.matches(t)?o(e):console.log(e.target)}))}},"./Scripts/Shared/Utils/JQValidations.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.JQValidations=void 0;var o=function(){function e(){}return e.MaxFileSizeValidation=function(){$.validator.methods.maxfilesize||($.validator.addMethod("maxfilesize",(function(e,t,o){var n=o,a=t.files[0];return!(a&&a.size/1024>n)})),$.validator.unobtrusive.adapters.add("maxfilesize",["size"],(function(e){e.rules.maxfilesize=e.params.size,e.messages.maxfilesize=e.message})))},e.AllowedExtensionsValidation=function(){$.validator.methods.allowedextensions||($.validator.addMethod("allowedextensions",(function(e,t,o){var n=o,a=t.files[0],r=n.split(",");return!a||!!new RegExp("("+r.join("|").replace(/\./g,"\\.")+")$").test(e)})),$.validator.unobtrusive.adapters.add("allowedextensions",["exts"],(function(e){e.rules.allowedextensions=e.params.exts,e.messages.allowedextensions=e.message})))},e}();t.JQValidations=o},"./Scripts/Shared/index.ts":function(e,t,o){var n=this&&this.__createBinding||(Object.create?function(e,t,o,n){void 0===n&&(n=o),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[o]}})}:function(e,t,o,n){void 0===n&&(n=o),e[n]=t[o]}),a=this&&this.__exportStar||function(e,t){for(var o in e)"default"===o||Object.prototype.hasOwnProperty.call(t,o)||n(t,e,o)};Object.defineProperty(t,"__esModule",{value:!0}),a(o("./Scripts/Shared/Http/index.ts"),t),a(o("./Scripts/Shared/Models/index.ts"),t),a(o("./Scripts/Shared/Utils/HTMLExtensions.ts"),t)}},t={};return function o(n){if(t[n])return t[n].exports;var a=t[n]={exports:{}};return e[n].call(a.exports,a,a.exports,o),a.exports}("./Scripts/Pages/Cabezotes/Cabezotes.ts")})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYW1wbGUvd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovL3NhbXBsZS8uL1NjcmlwdHMvUGFnZXMvQ2FiZXpvdGVzL0NhYmV6b3Rlcy50cyIsIndlYnBhY2s6Ly9zYW1wbGUvLi9TY3JpcHRzL1BhZ2VzL0NhYmV6b3Rlcy9HZXN0aW9uQ2FiZXpvdGVzLnRzIiwid2VicGFjazovL3NhbXBsZS8uL1NjcmlwdHMvU2hhcmVkL0NvbXBvbmVudHMvQ29uZmlndXJlRGF0YVRhYmxlLnRzIiwid2VicGFjazovL3NhbXBsZS8uL1NjcmlwdHMvU2hhcmVkL0NvbXBvbmVudHMvQ29uZmlybU1vZGFsTWVzc2FnZS50cyIsIndlYnBhY2s6Ly9zYW1wbGUvLi9TY3JpcHRzL1NoYXJlZC9IdHRwL0h0dHBGZXRjaFNlcnZpY2UudHMiLCJ3ZWJwYWNrOi8vc2FtcGxlLy4vU2NyaXB0cy9TaGFyZWQvSHR0cC9pbmRleC50cyIsIndlYnBhY2s6Ly9zYW1wbGUvLi9TY3JpcHRzL1NoYXJlZC9Nb2RlbHMvQXJlYS50cyIsIndlYnBhY2s6Ly9zYW1wbGUvLi9TY3JpcHRzL1NoYXJlZC9Nb2RlbHMvQ2FiZXpvdGUudHMiLCJ3ZWJwYWNrOi8vc2FtcGxlLy4vU2NyaXB0cy9TaGFyZWQvTW9kZWxzL0NvbmR1Y3Rvci50cyIsIndlYnBhY2s6Ly9zYW1wbGUvLi9TY3JpcHRzL1NoYXJlZC9Nb2RlbHMvTGluZWEudHMiLCJ3ZWJwYWNrOi8vc2FtcGxlLy4vU2NyaXB0cy9TaGFyZWQvTW9kZWxzL0xvZy50cyIsIndlYnBhY2s6Ly9zYW1wbGUvLi9TY3JpcHRzL1NoYXJlZC9Nb2RlbHMvVHJhaWxlci50cyIsIndlYnBhY2s6Ly9zYW1wbGUvLi9TY3JpcHRzL1NoYXJlZC9Nb2RlbHMvVXN1YXJpby50cyIsIndlYnBhY2s6Ly9zYW1wbGUvLi9TY3JpcHRzL1NoYXJlZC9Nb2RlbHMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vc2FtcGxlLy4vU2NyaXB0cy9TaGFyZWQvVXRpbHMvSFRNTEV4dGVuc2lvbnMudHMiLCJ3ZWJwYWNrOi8vc2FtcGxlLy4vU2NyaXB0cy9TaGFyZWQvVXRpbHMvSlFWYWxpZGF0aW9ucy50cyIsIndlYnBhY2s6Ly9zYW1wbGUvLi9TY3JpcHRzL1NoYXJlZC9pbmRleC50cyIsIndlYnBhY2s6Ly9zYW1wbGUvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vc2FtcGxlL3dlYnBhY2svc3RhcnR1cCJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJzZWxmIiwidGhpcyIsIkluaXQiLCJEZXN0cm95IiwiVGFibGUiLCJkZXN0cm95IiwiSW5pY2lhbGl6YXJCdXR0b25zIiwiSW5pY2lhbGl6YXJDb250cm9scyIsIkNvbmZpZ3VyZURhdGFUYWJsZSIsIkNvbmZpZ3VyZSIsImdlc3Rpb25DYWJlem90ZXMiLCJDYWJlem90ZXNHZXN0aW9uUGFnZSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJvbkNhYmV6b3RlQ3JlYWRvIiwiY2FiZXpvdGUiLCJBZ3JlZ2FyRmlsYURhdGF0YWJsZSIsIkpRVmFsaWRhdGlvbnMiLCJNYXhGaWxlU2l6ZVZhbGlkYXRpb24iLCJBbGxvd2VkRXh0ZW5zaW9uc1ZhbGlkYXRpb24iLCJ0YWJsZSIsImNhYmV6b3RlQWRkIiwib24iLCJldmVudCIsInRhcmdldCIsIm1hdGNoZXMiLCJCb3JyYXJDYWJlem90ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJDcmVhckNhYmV6b3RlIiwiZWxlbWVudCIsImNhYmV6b3RlSWQiLCJkYXRhc2V0IiwiY2FiZXpvdGVpZCIsIkNvbmZpcm1Nb2RhbE1lc3NhZ2UiLCJDb25maXJtIiwiSHR0cEZldGNoU2VydmljZSIsIlBvc3QiLCJ0aGVuIiwiZGF0YSIsIlJlc3VsdCIsIkJvcnJhckZpbGFEYXRhdGFibGUiLCJNIiwidG9hc3QiLCJodG1sIiwiTWVzc2FnZSIsImNsYXNzZXMiLCJjYXRjaCIsImVycm9yIiwiTnVldm9DYWJlem90ZSIsIiR0ciIsIiQiLCJjbG9zZXN0IiwicHJldiIsImhhc0NsYXNzIiwicm93IiwicmVtb3ZlIiwiZHJhdyIsImFkZCIsIlBsYWNhIiwiQ2FiZXpvdGVzUGFnZSIsImNhYmV6b3Rlc1BhZ2UiLCJlIiwiVVJMIiwiaW5kZXhPZiIsIm1vZGFsQmFzZSIsIl9iYXNlVXJsIiwiX2h0dHBTZXJ2aWNlIiwiX21vZGFsQmFzZSIsIkluaWNpYWxpemFyTW9kYWwiLCJpbm5lckhUTUwiLCJJbmljaWxpemFyRm9ybUNhYmV6b3RlIiwiX21vZGFsSW5zdGFuY2UiLCJvcGVuIiwiR3VhcmRhckNhYmV6b3RlIiwidG9rZW4iLCJfZm9ybURhdGEiLCJnZXQiLCJ0b1N0cmluZyIsIlBvc3RGb3JtIiwiTGltcGlhckZvcm11bGFyaW8iLCJFeHRyYWVyQ2FiZXpvdGUiLCJlcnIiLCJjb25zb2xlIiwibG9nIiwiTW9kYWwiLCJpbml0IiwiZGlzbWlzc2libGUiLCJvcGFjaXR5IiwiaW5EdXJhdGlvbiIsIm91dER1cmF0aW9uIiwic3RhcnRpbmdUb3AiLCJlbmRpbmdUb3AiLCJ1cGRhdGVUZXh0RmllbGRzIiwiX2Zvcm1DYWJlem90ZSIsInF1ZXJ5U2VsZWN0b3IiLCJGb3JtRGF0YSIsInJlbW92ZURhdGEiLCJ2YWxpZGF0b3IiLCJ1bm9idHJ1c2l2ZSIsInBhcnNlIiwiZXYiLCJDZXJyYXJNb2RhbCIsIm9uc3VibWl0IiwicHJldmVudERlZmF1bHQiLCJ2YWxpZCIsImNhYiIsIkNhYmV6b3RlIiwicmVzZXQiLCJ2YWwiLCJ0cmlnZ2VyIiwiY2xvc2UiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJpZCIsImNvbHVtbnMiLCJEYXRhVGFibGUiLCJjb2x1bW5EZWZzIiwicmVzcG9uc2l2ZSIsImxhbmd1YWdlIiwiRmlsdGVyR2xvYmFsIiwic2VhcmNoIiwicHJvcCIsImNvbHVtbiIsInBhcmVudHMiLCJhdHRyIiwidGl0bGUiLCJtZXNzYWdlIiwiYWNjZXB0VGV4dCIsImRpc21pc3NUZXh0IiwiaWRNZXNzc2FnZSIsInBhcmVudCIsImJvZHkiLCJDcmVhdGVNb2RhbCIsIkFwcGVuZE1vZGVsIiwibW9kYWwiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NMaXN0IiwiY29udGVudCIsImFwcGVuZENoaWxkIiwiaGVhZGVyIiwidGV4dENvbnRlbnQiLCJidXR0b25Hcm91cCIsImRpc21pc3NCdXR0b24iLCJ0eXBlIiwiYWNjZXB0QnV0dG9uIiwibW9kYWxJbnN0YW5jZSIsImVsZW0iLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImdldEluc3RhbmNlIiwidXJsIiwicGF5bG9hZCIsImpzb25SZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZXNwb25zZSIsImpzb24iLCJ0ZXh0IiwiUG9zdEZvcm1VUkwiLCJzZXJ2aWNlcyIsIkFyZWEiLCJDb25kdWN0b3IiLCJMaW5lYSIsIkxvZyIsIlRyYWlsZXIiLCJVc3VhcmlvIiwibW9kZWxzIiwiSFRNTEVsZW1lbnQiLCJwcm90b3R5cGUiLCJldmVudFR5cGUiLCJjaGlsZFNlbGVjdG9yIiwiZXZlbnRIYW5kbGVyIiwiZXZlbnRPbkVsZW1lbnQiLCJtZXRob2RzIiwiYWRkTWV0aG9kIiwidmFsdWUiLCJwYXJhbXMiLCJzaXplIiwiZmlsZSIsImZpbGVzIiwiYWRhcHRlcnMiLCJvcHRpb25zIiwicnVsZXMiLCJtZXNzYWdlcyIsImV4dHMiLCJleHRzQXJyYXkiLCJzcGxpdCIsIlJlZ0V4cCIsImpvaW4iLCJyZXBsYWNlIiwidGVzdCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsIl9fd2VicGFja19tb2R1bGVzX18iLCJjYWxsIl0sIm1hcHBpbmdzIjoiO0NBQUEsU0FBMkNBLEVBQU1DLEdBQzFCLGlCQUFaQyxTQUEwQyxpQkFBWEMsT0FDeENBLE9BQU9ELFFBQVVELElBQ1EsbUJBQVhHLFFBQXlCQSxPQUFPQyxJQUM5Q0QsT0FBTyxHQUFJSCxH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LEVBQVFFLEVBRE56SixFQUNvQjBKLE1BQU0sR0FDbkNNLEVBQVlELEVBQUtFLE1BQU0sS0FFM0IsT0FBSVIsS0FDSSxJQUFLUyxPQUFPLElBQU1GLEVBQVVHLEtBQUssS0FBS0MsUUFBUSxNQUFPLE9BQVMsTUFBT0MsS0FBS2YsTUFRdEZqSSxFQUFFK0MsVUFBVUMsWUFBWXNGLFNBQVMvSCxJQUFJLG9CQUFxQixDQUFDLFNBQVMsU0FBVWdJLEdBQzFFQSxFQUFRQyxNQUF5QixrQkFBSUQsRUFBUUwsT0FBYSxLQUMxREssRUFBUUUsU0FBNEIsa0JBQUlGLEVBQVEzRCxhQUc1RCxFQWhEQSxHQUFhLEVBQUE3RyxpQixzYUNBYix5Q0FDQSwyQ0FDQSxxRENESWtMLEVBQTJCLEdDRS9CLE9EQ0EsU0FBU0MsRUFBb0JDLEdBRTVCLEdBQUdGLEVBQXlCRSxHQUMzQixPQUFPRixFQUF5QkUsR0FBVXpNLFFBRzNDLElBQUlDLEVBQVNzTSxFQUF5QkUsR0FBWSxDQUdqRHpNLFFBQVMsSUFPVixPQUhBME0sRUFBb0JELEdBQVVFLEtBQUsxTSxFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTd00sR0FHcEV2TSxFQUFPRCxRQ2pCUndNLENBQW9CLDJDIiwiZmlsZSI6ImNhYmV6b3Rlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFtdLCBmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcInNhbXBsZVwiXSA9IGZhY3RvcnkoKTtcblx0ZWxzZVxuXHRcdHJvb3RbXCJzYW1wbGVcIl0gPSBmYWN0b3J5KCk7XG59KShzZWxmLCBmdW5jdGlvbigpIHtcbnJldHVybiAiLCJpbXBvcnQgeyBIdHRwRmV0Y2hTZXJ2aWNlLCBJTWVzc2FnZVJlc3BvbnNlLCBDYWJlem90ZSB9IGZyb20gJy4uLy4uL1NoYXJlZCc7XHJcbmltcG9ydCB7IENvbmZpcm1Nb2RhbE1lc3NhZ2UgfSBmcm9tICcuLi8uLi9TaGFyZWQvQ29tcG9uZW50cy9Db25maXJtTW9kYWxNZXNzYWdlJztcclxuaW1wb3J0IHsgQ29uZmlndXJlRGF0YVRhYmxlIH0gZnJvbSAnLi4vLi4vU2hhcmVkL0NvbXBvbmVudHMvQ29uZmlndXJlRGF0YVRhYmxlJztcclxuaW1wb3J0IHsgQ2FiZXpvdGVzR2VzdGlvblBhZ2UgfSBmcm9tICcuL0dlc3Rpb25DYWJlem90ZXMnO1xyXG5pbXBvcnQgeyBKUVZhbGlkYXRpb25zIH0gZnJvbSAnLi4vLi4vU2hhcmVkL1V0aWxzL0pRVmFsaWRhdGlvbnMnO1xyXG5pbXBvcnQgeyBJUGFnZSB9IGZyb20gJy4uLy4uL1NoYXJlZC9Db21wb25lbnRzL0lQYWdlJztcclxuXHJcbmV4cG9ydCBjbGFzcyBDYWJlem90ZXNQYWdlIGltcGxlbWVudHMgSVBhZ2Uge1xyXG5cclxuICAgIHByaXZhdGUgVGFibGU6IERhdGFUYWJsZXMuQXBpO1xyXG4gICAgcHJpdmF0ZSBtb2RhbEluc3RhbmNlOiBNLk1vZGFsO1xyXG4gICAgcHJpdmF0ZSBnZXN0aW9uQ2FiZXpvdGVzOiBDYWJlem90ZXNHZXN0aW9uUGFnZTtcclxuXHJcbiAgICBCYXNlVVJMOiBcIi9DYWJlem90ZXMvSW5kZXhcIjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLkluaXQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgRGVzdHJveSgpIHtcclxuICAgICAgICB0aGlzLlRhYmxlLmRlc3Ryb3koZmFsc2UpO1xyXG4gICAgICAgIC8vdGhpcy5UYWJsZS5yb3dzKCkuaW52YWxpZGF0ZSgpLmRyYXcoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgSW5pdCgpIHtcclxuICAgICAgICB0aGlzLkluaWNpYWxpemFyQnV0dG9ucygpO1xyXG4gICAgICAgIHRoaXMuSW5pY2lhbGl6YXJDb250cm9scygpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgSW5pY2lhbGl6YXJDb250cm9scygpIHtcclxuICAgICAgICB0aGlzLlRhYmxlID0gbmV3IENvbmZpZ3VyZURhdGFUYWJsZSgpLkNvbmZpZ3VyZShcIiNkYXRhLXRhYmxlLWNhYmV6b3RlXCIsIFt7IFwid2lkdGhcIjogXCI1MCVcIiwgXCJ0YXJnZXRzXCI6IDAgfV0pO1xyXG4gICAgICAgIHRoaXMuZ2VzdGlvbkNhYmV6b3RlcyA9IG5ldyBDYWJlem90ZXNHZXN0aW9uUGFnZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhYmV6b3RlLW1vZGFsXCIpKTtcclxuICAgICAgICB0aGlzLmdlc3Rpb25DYWJlem90ZXMub25DYWJlem90ZUNyZWFkbyA9IChjYWJlem90ZSkgPT4gdGhpcy5BZ3JlZ2FyRmlsYURhdGF0YWJsZShjYWJlem90ZSk7XHJcbiAgICAgICAgSlFWYWxpZGF0aW9ucy5NYXhGaWxlU2l6ZVZhbGlkYXRpb24oKTtcclxuICAgICAgICBKUVZhbGlkYXRpb25zLkFsbG93ZWRFeHRlbnNpb25zVmFsaWRhdGlvbigpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgSW5pY2lhbGl6YXJCdXR0b25zKCkge1xyXG4gICAgICAgIHZhciB0YWJsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGF0YS10YWJsZS1jYWJlem90ZVwiKTtcclxuICAgICAgICB2YXIgY2FiZXpvdGVBZGQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhYmV6b3RlLWFkZFwiKTtcclxuXHJcbiAgICAgICAgdGFibGUub24oJ2NsaWNrJywgJy5jYWJlem90ZS1hY3Rpb24nLCBldmVudCA9PiB7XHJcblxyXG4gICAgICAgICAgICBpZiAoZXZlbnQudGFyZ2V0Lm1hdGNoZXMoXCIuY2FiZXpvdGUtZGVsZXRlXCIpKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5Cb3JyYXJDYWJlem90ZShldmVudC50YXJnZXQgYXMgSFRNTEVsZW1lbnQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGNhYmV6b3RlQWRkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZXZlbnQgPT4gdGhpcy5DcmVhckNhYmV6b3RlKCkpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgYXN5bmMgQm9ycmFyQ2FiZXpvdGUoZWxlbWVudDogSFRNTEVsZW1lbnQpIHtcclxuICAgICAgICBsZXQgY2FiZXpvdGVJZCA9IGVsZW1lbnQuZGF0YXNldC5jYWJlem90ZWlkO1xyXG4gICAgICAgIGNvbnN0IGNvbmZpcm0gPSBuZXcgQ29uZmlybU1vZGFsTWVzc2FnZShcIkVsaW1pbmFyIENhYmV6b3RlXCIsIFwiwr9EZXNlYSBlbGltaW5hciBlbCBDYWJlem90ZSBcIiArIGNhYmV6b3RlSWQgKyBcIj9cIiwgXCJBY2VwdGFyXCIsIFwiQ2FuY2VsYXJcIik7XHJcbiAgICAgICAgY29uc3Qgc2hvdWxkRGVsZXRlID0gYXdhaXQgY29uZmlybS5Db25maXJtKCk7XHJcbiAgICAgICAgaWYgKHNob3VsZERlbGV0ZSkge1xyXG4gICAgICAgICAgICBjb25zdCBodHRwU2VydmljZSA9IG5ldyBIdHRwRmV0Y2hTZXJ2aWNlKCk7XHJcbiAgICAgICAgICAgIGh0dHBTZXJ2aWNlLlBvc3Q8SU1lc3NhZ2VSZXNwb25zZT4oJy9DYWJlem90ZXMvQm9ycmFyQ2FiZXpvdGUnLCBjYWJlem90ZUlkKVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5SZXN1bHQpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuQm9ycmFyRmlsYURhdGF0YWJsZShlbGVtZW50KTtcclxuICAgICAgICAgICAgICAgICAgICBNLnRvYXN0KHsgaHRtbDogZGF0YS5NZXNzYWdlLCBjbGFzc2VzOiAoZGF0YS5SZXN1bHQpID8gXCJzdWNjZXNcIiA6IFwiZXJyb3JcIiB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICB9KS5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBNLnRvYXN0KHsgaHRtbDogZXJyb3IsIGNsYXNzZXM6IFwiZXJyb3JcIiB9KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIENyZWFyQ2FiZXpvdGUoKSB7XHJcbiAgICAgICAgdGhpcy5nZXN0aW9uQ2FiZXpvdGVzLk51ZXZvQ2FiZXpvdGUoKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgLy9GdW5jaW9uIHBhcmEgYm9ycmFyIENhYmV6b3RlIGRlbCBkYXRhdGFibGVcclxuICAgIHByaXZhdGUgQm9ycmFyRmlsYURhdGF0YWJsZShlbGVtZW50OiBIVE1MRWxlbWVudCkge1xyXG4gICAgICAgIHZhciAkdHIgPSAkKGVsZW1lbnQpLmNsb3Nlc3QoXCJ0clwiKTtcclxuICAgICAgICBpZiAoJHRyLnByZXYoKS5oYXNDbGFzcyhcInBhcmVudFwiKSkge1xyXG4gICAgICAgICAgICBsZXQgcm93ID0gdGhpcy5UYWJsZS5yb3coJHRyLnByZXYoKSk7XHJcbiAgICAgICAgICAgIHJvdy5yZW1vdmUoKTtcclxuICAgICAgICAgICAgcm93LmRyYXcoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IHJvdyA9IHRoaXMuVGFibGUucm93KCR0cik7XHJcbiAgICAgICAgcm93LnJlbW92ZSgpO1xyXG4gICAgICAgIHJvdy5kcmF3KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gYWdyZWdhciB1biBudWV2byBDYWJlem90ZVxyXG4gICAgcHJpdmF0ZSBBZ3JlZ2FyRmlsYURhdGF0YWJsZShjYWJlem90ZTogQ2FiZXpvdGUpIHtcclxuICAgICAgICB0aGlzLlRhYmxlLnJvdy5hZGQoW1xyXG4gICAgICAgICAgICBjYWJlem90ZS5QbGFjYSxcclxuICAgICAgICAgICAgJzxhIGhyZWY9XCIjXCIgZGF0YS10dXJib2xpbmtzPVwiZmFsc2VcIj48aSBjbGFzcz1cIm1hdGVyaWFsLWljb25zIGNhYmV6b3RlLWFjdGlvbiBjYWJlem90ZS1kZWxldGVcIiBkYXRhLWNhYmV6b3RlaWQ9XCInICsgY2FiZXpvdGUuUGxhY2EgKyAnXCI+ZGVsZXRlPC9pPjwvYT4gJ1xyXG4gICAgICAgIF0pLmRyYXcoZmFsc2UpO1xyXG5cclxuICAgIH1cclxuXHJcblxyXG59XHJcblxyXG52YXIgY2FiZXpvdGVzUGFnZSA9IG5ldyBDYWJlem90ZXNQYWdlKCk7XHJcblxyXG5cclxuXHJcbi8vIENhbGxlZCBhZnRlciBldmVyeSBub24taW5pdGlhbCBwYWdlIGxvYWRcclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndHVyYm9saW5rczpyZW5kZXInLCAoZTogYW55KSA9PiB7XHJcbiAgICBpZiAoZG9jdW1lbnQuVVJMLmluZGV4T2YoJy9DYWJlem90ZXMvSW5kZXgnKSAhPSAtMSkge1xyXG4gICAgICAgIGlmIChjYWJlem90ZXNQYWdlKSB7XHJcbiAgICAgICAgICAgIGNhYmV6b3Rlc1BhZ2UuSW5pdCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgY2FiZXpvdGVzUGFnZSA9IG5ldyBDYWJlem90ZXNQYWdlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vY29uc29sZS5sb2coZS5kYXRhLnVybCk7XHJcbiAgICB9XHJcbiAgICBlbHNlXHJcbiAgICAgICAgY2FiZXpvdGVzUGFnZT8uRGVzdHJveSgpO1xyXG59KTsiLCJcclxuaW1wb3J0IHsgSHR0cEZldGNoU2VydmljZSwgSU1lc3NhZ2VSZXNwb25zZSB9IGZyb20gJy4uLy4uL1NoYXJlZCc7XHJcbmltcG9ydCB7IENhYmV6b3RlIH0gZnJvbSAnLi4vLi4vU2hhcmVkL01vZGVscy9DYWJlem90ZSc7XHJcblxyXG5leHBvcnQgY2xhc3MgQ2FiZXpvdGVzR2VzdGlvblBhZ2Uge1xyXG5cclxuICAgIC8vUFJPUElFREFERVNcclxuICAgIHB1YmxpYyBvbkNhYmV6b3RlQ3JlYWRvPzogKGNhYmV6b3RlOiBDYWJlem90ZSkgPT4gdm9pZDtcclxuICAgIHB1YmxpYyBvbkNhYmV6b3RlQWN0dWFsaXphZG8/OiAoY2FiZXpvdGU6IENhYmV6b3RlKSA9PiB2b2lkO1xyXG5cclxuICAgIC8vQ0FNUE9TXHJcbiAgICBwcml2YXRlIF9iYXNlVXJsID0gXCIvQ2FiZXpvdGVzXCI7XHJcbiAgICBwcml2YXRlIF9odHRwU2VydmljZTogSHR0cEZldGNoU2VydmljZTtcclxuICAgIHByaXZhdGUgX21vZGFsSW5zdGFuY2U6IE0uTW9kYWw7XHJcbiAgICBwcml2YXRlIF9tb2RhbEJhc2U6IEhUTUxFbGVtZW50O1xyXG4gICAgcHJpdmF0ZSBfZm9ybUNhYmV6b3RlOiBIVE1MRm9ybUVsZW1lbnQ7XHJcbiAgICBwcml2YXRlIF9mb3JtRGF0YTogRm9ybURhdGE7XHJcblxyXG4gICAgLy9DT05TVFJVQ1RPUlxyXG4gICAgY29uc3RydWN0b3IobW9kYWxCYXNlOiBIVE1MRWxlbWVudCkge1xyXG4gICAgICAgIHRoaXMuX2h0dHBTZXJ2aWNlID0gbmV3IEh0dHBGZXRjaFNlcnZpY2UoKTtcclxuICAgICAgICB0aGlzLl9tb2RhbEJhc2UgPSBtb2RhbEJhc2U7XHJcbiAgICAgICAgdGhpcy5JbmljaWFsaXphck1vZGFsKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy9NRVRPRE9TXHJcblxyXG4gICAgLy9DcmVhY2lvbiBkZSBudWV2byBjYWJlem90ZVxyXG4gICAgcHVibGljIE51ZXZvQ2FiZXpvdGUoKSB7XHJcbiAgICAgICAgdGhpcy5faHR0cFNlcnZpY2UuUG9zdDxzdHJpbmc+KHRoaXMuX2Jhc2VVcmwgKyBcIi9OdWV2b0NhYmV6b3RlXCIsIG51bGwsIGZhbHNlKVxyXG4gICAgICAgICAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fbW9kYWxCYXNlLmlubmVySFRNTCA9IGRhdGE7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkluaWNpbGl6YXJGb3JtQ2FiZXpvdGUoKTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuX21vZGFsSW5zdGFuY2Uub3BlbigpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vR3VhcmRhciBjYWJlem90ZVxyXG4gICAgcHJpdmF0ZSBHdWFyZGFyQ2FiZXpvdGUoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IHRva2VuID0gdGhpcy5fZm9ybURhdGEuZ2V0KFwiUmVxdWVzdFZlcmlmaWNhdGlvblRva2VuXCIpPy50b1N0cmluZygpO1xyXG4gICAgICAgIHRoaXMuX2h0dHBTZXJ2aWNlLlBvc3RGb3JtPElNZXNzYWdlUmVzcG9uc2U+KHRoaXMuX2Jhc2VVcmwgKyBcIi9DcmVhckNhYmV6b3RlXCIsIHRoaXMuX2Zvcm1EYXRhLCB0b2tlbilcclxuICAgICAgICAgICAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChkYXRhLlJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuTGltcGlhckZvcm11bGFyaW8oKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5vbkNhYmV6b3RlQ3JlYWRvKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9uQ2FiZXpvdGVDcmVhZG8odGhpcy5FeHRyYWVyQ2FiZXpvdGUoKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBNLnRvYXN0KHsgaHRtbDogZGF0YS5NZXNzYWdlLCBjbGFzc2VzOiAoZGF0YS5SZXN1bHQpID8gXCJzdWNjZXNcIiA6IFwiZXJyb3JcIiB9KTtcclxuXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgLy9JbmljaWFsaXphciBjb250cm9sIG1vZGFsXHJcbiAgICBwcml2YXRlIEluaWNpYWxpemFyTW9kYWwoKSB7XHJcblxyXG4gICAgICAgIHRoaXMuX21vZGFsSW5zdGFuY2UgPSBNLk1vZGFsLmluaXQodGhpcy5fbW9kYWxCYXNlLCB7XHJcbiAgICAgICAgICAgIGRpc21pc3NpYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgb3BhY2l0eTogLjUsXHJcbiAgICAgICAgICAgIGluRHVyYXRpb246IDMwMCxcclxuICAgICAgICAgICAgb3V0RHVyYXRpb246IDIwMCxcclxuICAgICAgICAgICAgc3RhcnRpbmdUb3A6ICc2JScsXHJcbiAgICAgICAgICAgIGVuZGluZ1RvcDogJzglJ1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAvL0luaWNpYWxpemFyIGNvbnRyb2xlcyBkZSBmb3JtdWxhcmlvXHJcbiAgICBwcml2YXRlIEluaWNpbGl6YXJGb3JtQ2FiZXpvdGUoKTogdm9pZCB7XHJcbiAgICAgICAgTS51cGRhdGVUZXh0RmllbGRzKCk7XHJcblxyXG4gICAgICAgIHRoaXMuX2Zvcm1DYWJlem90ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2FiZXpvdGUtZm9ybVwiKTtcclxuICAgICAgICB0aGlzLl9mb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSh0aGlzLl9mb3JtQ2FiZXpvdGUpO1xyXG4gICAgICAgICQodGhpcy5fZm9ybUNhYmV6b3RlKS5yZW1vdmVEYXRhKFwidmFsaWRhdG9yXCIpLnJlbW92ZURhdGEoXCJ1bm9idHJ1c2l2ZVZhbGlkYXRpb25cIik7XHJcbiAgICAgICAgJC52YWxpZGF0b3IudW5vYnRydXNpdmUucGFyc2UodGhpcy5fZm9ybUNhYmV6b3RlKTtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhYmV6b3RlLW1vZGFsLWNhbmNlbFwiKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldikgPT4gdGhpcy5DZXJyYXJNb2RhbCgpKTtcclxuXHJcbiAgICAgICAgdGhpcy5fZm9ybUNhYmV6b3RlLm9uc3VibWl0ID0gKGUpID0+IHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgICAgICAgICAgaWYgKCQodGhpcy5fZm9ybUNhYmV6b3RlKS52YWxpZCgpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9mb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSh0aGlzLl9mb3JtQ2FiZXpvdGUpO1xyXG4gICAgICAgICAgICAgICAgLy9mb3JtRGF0YS5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7IGNvbnNvbGUubG9nKGtleSArIFwiOiBcIiArIHZhbHVlKSB9KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuR3VhcmRhckNhYmV6b3RlKCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8gcHJldmVudCByZWxvYWRcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIC8vRXh0cmFlciBjYWJlem90ZSBkZSBmb3JtdWxhcmlvXHJcbiAgICBwcml2YXRlIEV4dHJhZXJDYWJlem90ZSgpOiBDYWJlem90ZSB7XHJcbiAgICAgICAgbGV0IGNhYiA9IG5ldyBDYWJlem90ZSgpO1xyXG4gICAgICAgIGNhYi5QbGFjYSA9IHRoaXMuX2Zvcm1EYXRhLmdldChcIlBsYWNhXCIpPy50b1N0cmluZygpO1xyXG5cclxuICAgICAgICByZXR1cm4gY2FiO1xyXG4gICAgfVxyXG5cclxuICAgIC8vUmVzZXQgZGUgZm9ybXVsYXJpb1xyXG4gICAgcHJpdmF0ZSBMaW1waWFyRm9ybXVsYXJpbygpIHtcclxuICAgICAgICB0aGlzLl9mb3JtQ2FiZXpvdGUucmVzZXQoKTtcclxuICAgICAgICAkKCcjY2FiZXpvdGUtaWQnKS52YWwobnVsbCkudHJpZ2dlcignY2hhbmdlJyk7XHJcbiAgICAgICAgTS51cGRhdGVUZXh0RmllbGRzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy9DZXJyYXIgY29udHJvbCBtb2RhbFxyXG4gICAgcHJpdmF0ZSBDZXJyYXJNb2RhbCgpIHtcclxuICAgICAgICB0aGlzLl9tb2RhbEluc3RhbmNlLmNsb3NlKCk7XHJcbiAgICAgICAgdGhpcy5fZm9ybUNhYmV6b3RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5fZm9ybUNhYmV6b3RlKTtcclxuICAgIH1cclxuXHJcblxyXG59IiwiZXhwb3J0IGNsYXNzIENvbmZpZ3VyZURhdGFUYWJsZSB7XHJcblxyXG4gICAgcHVibGljIENvbmZpZ3VyZShpZDogc3RyaW5nLCBjb2x1bW5zPzogRGF0YVRhYmxlcy5Db2x1bW5EZWZzU2V0dGluZ3NbXSk6IERhdGFUYWJsZXMuQXBpIHtcclxuXHJcbiAgICAgICAgbGV0IHRhYmxlID0gJChpZCkuRGF0YVRhYmxlKHtcclxuICAgICAgICAgICAgY29sdW1uRGVmczogY29sdW1ucyxcclxuICAgICAgICAgICAgcmVzcG9uc2l2ZTogdHJ1ZSxcclxuICAgICAgICAgICAgbGFuZ3VhZ2U6IHtcclxuICAgICAgICAgICAgICAgIFwicHJvY2Vzc2luZ1wiOiBcIlByb2Nlc2FuZG8uLi5cIixcclxuICAgICAgICAgICAgICAgIFwibGVuZ3RoTWVudVwiOiBcIk1vc3RyYXIgX01FTlVfIHJlZ2lzdHJvc1wiLFxyXG4gICAgICAgICAgICAgICAgXCJ6ZXJvUmVjb3Jkc1wiOiBcIk5vIHNlIGVuY29udHJhcm9uIHJlc3VsdGFkb3NcIixcclxuICAgICAgICAgICAgICAgIFwiZW1wdHlUYWJsZVwiOiBcIk5pbmfDum4gZGF0byBkaXNwb25pYmxlIGVuIGVzdGEgdGFibGFcIixcclxuICAgICAgICAgICAgICAgIFwiaW5mb1wiOiBcIk1vc3RyYW5kbyBkZWwgX1NUQVJUXyBhbCBfRU5EXyBkZSBfVE9UQUxfIHJlZ2lzdHJvc1wiLFxyXG4gICAgICAgICAgICAgICAgXCJpbmZvRW1wdHlcIjogXCJNb3N0cmFuZG8gZGVsIDAgYWwgMCBkZSAwIHJlZ2lzdHJvc1wiLFxyXG4gICAgICAgICAgICAgICAgXCJpbmZvRmlsdGVyZWRcIjogXCIoZmlsdHJhZG8gZGUgdW4gdG90YWwgZGUgX01BWF8gcmVnaXN0cm9zKVwiLFxyXG4gICAgICAgICAgICAgICAgXCJzZWFyY2hcIjogXCJCdXNjYXI6XCIsXHJcbiAgICAgICAgICAgICAgICBcInRob3VzYW5kc1wiOiBcIixcIixcclxuICAgICAgICAgICAgICAgIFwibG9hZGluZ1JlY29yZHNcIjogXCJDYXJnYW5kby4uLlwiLFxyXG4gICAgICAgICAgICAgICAgXCJwYWdpbmF0ZVwiOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJmaXJzdFwiOiBcIlByaW1lcm9cIixcclxuICAgICAgICAgICAgICAgICAgICBcImxhc3RcIjogXCLDmmx0aW1vXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuZXh0XCI6IFwiU2lndWllbnRlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJwcmV2aW91c1wiOiBcIkFudGVyaW9yXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBcImFyaWFcIjoge1xyXG4gICAgICAgICAgICAgICAgICAgIFwic29ydEFzY2VuZGluZ1wiOiBcIjogQWN0aXZhciBwYXJhIG9yZGVuYXIgbGEgY29sdW1uYSBkZSBtYW5lcmEgYXNjZW5kZW50ZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwic29ydERlc2NlbmRpbmdcIjogXCI6IEFjdGl2YXIgcGFyYSBvcmRlbmFyIGxhIGNvbHVtbmEgZGUgbWFuZXJhIGRlc2NlbmRlbnRlXCJcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLkZpbHRlckdsb2JhbCh0YWJsZSk7XHJcblxyXG4gICAgICAgIHJldHVybiB0YWJsZTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIEZpbHRlckdsb2JhbCh0YWJsZTogRGF0YVRhYmxlcy5BcGkpIHtcclxuXHJcbiAgICAgICAgJChcImlucHV0I2dsb2JhbF9maWx0ZXJcIikub24oXCJrZXl1cCBjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRhYmxlLnNlYXJjaCgkKFwiI2dsb2JhbF9maWx0ZXJcIikudmFsKCkudG9TdHJpbmcoKSwgJChcIiNnbG9iYWxfcmVnZXhcIikucHJvcChcImNoZWNrZWRcIiksICQoXCIjZ2xvYmFsX3NtYXJ0XCIpLnByb3AoXCJjaGVja2VkXCIpKS5kcmF3KCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoXCJpbnB1dC5jb2x1bW5fZmlsdGVyXCIpLm9uKFwia2V5dXAgY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBsZXQgY29sdW1uID0gJCh0aGlzKS5wYXJlbnRzKFwidHJcIikuYXR0cihcImRhdGEtY29sdW1uXCIpO1xyXG5cclxuICAgICAgICAgICAgdGFibGUuY29sdW1uKGNvbHVtbilcclxuICAgICAgICAgICAgICAgIC5zZWFyY2goXHJcbiAgICAgICAgICAgICAgICAgICAgJChcIiNjb2xcIiArIGNvbHVtbiArIFwiX2ZpbHRlclwiKS52YWwoKS50b1N0cmluZygpLFxyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjY29sXCIgKyBjb2x1bW4gKyBcIl9yZWdleFwiKS5wcm9wKFwiY2hlY2tlZFwiKSxcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2NvbFwiICsgY29sdW1uICsgXCJfc21hcnRcIikucHJvcChcImNoZWNrZWRcIilcclxuICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgIC5kcmF3KClcclxuICAgICAgICB9KTsgICBcclxuICAgIH1cclxuXHJcbn0iLCJleHBvcnQgY2xhc3MgQ29uZmlybU1vZGFsTWVzc2FnZSB7XHJcblxyXG4gICAgcHJpdmF0ZSBwYXJlbnQ6IEhUTUxFbGVtZW50O1xyXG4gICAgcHJpdmF0ZSBtb2RhbDogSFRNTEVsZW1lbnQ7XHJcbiAgICBwcml2YXRlIGFjY2VwdEJ1dHRvbjogSFRNTEJ1dHRvbkVsZW1lbnQ7XHJcbiAgICBwcml2YXRlIGRpc21pc3NCdXR0b246IEhUTUxCdXR0b25FbGVtZW50O1xyXG4gICAgcHJpdmF0ZSBtb2RhbEluc3RhbmNlOiBNLk1vZGFsO1xyXG4gICAgcHJpdmF0ZSBpZE1lc3NzYWdlOiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHVibGljIHRpdGxlOiBzdHJpbmcsXHJcbiAgICAgICAgcHVibGljIG1lc3NhZ2U6IHN0cmluZyxcclxuICAgICAgICBwdWJsaWMgYWNjZXB0VGV4dDogc3RyaW5nLFxyXG4gICAgICAgIHB1YmxpYyBkaXNtaXNzVGV4dDogc3RyaW5nKSB7XHJcblxyXG4gICAgICAgIHRoaXMuaWRNZXNzc2FnZSA9IFwiY29uZmlybS1tZXNzYWdlXCI7XHJcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBkb2N1bWVudC5ib2R5O1xyXG4gICAgICAgIHRoaXMuQ3JlYXRlTW9kYWwoKTtcclxuICAgICAgICB0aGlzLkFwcGVuZE1vZGVsKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBDcmVhdGVNb2RhbCgpIHtcclxuICAgICAgICB0aGlzLm1vZGFsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgICAgICB0aGlzLm1vZGFsLmlkID0gdGhpcy5pZE1lc3NzYWdlO1xyXG4gICAgICAgIHRoaXMubW9kYWwuY2xhc3NMaXN0LmFkZChcIm1vZGFsXCIsIFwibW9kYWwtZml4ZWQtZm9vdGVyXCIsIFwibW9kYWwtY29uZmlybS1tZXNzYWdlLXNtYWxsXCIpO1xyXG5cclxuICAgICAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgICAgICBjb250ZW50LmNsYXNzTGlzdC5hZGQoXCJtb2RhbC1jb250ZW50XCIpO1xyXG4gICAgICAgIHRoaXMubW9kYWwuYXBwZW5kQ2hpbGQoY29udGVudCk7XHJcblxyXG4gICAgICAgIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoNVwiKTtcclxuICAgICAgICBoZWFkZXIudGV4dENvbnRlbnQgPSB0aGlzLnRpdGxlO1xyXG4gICAgICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQoaGVhZGVyKTtcclxuXHJcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xyXG4gICAgICAgIG1lc3NhZ2UudGV4dENvbnRlbnQgPSB0aGlzLm1lc3NhZ2U7XHJcbiAgICAgICAgY29udGVudC5hcHBlbmRDaGlsZChtZXNzYWdlKTtcclxuXHJcbiAgICAgICAgY29uc3QgYnV0dG9uR3JvdXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgICAgIGJ1dHRvbkdyb3VwLmNsYXNzTGlzdC5hZGQoXCJtb2RhbC1mb290ZXJcIik7XHJcbiAgICAgICAgdGhpcy5tb2RhbC5hcHBlbmRDaGlsZChidXR0b25Hcm91cCk7XHJcblxyXG4gICAgICAgIHRoaXMuZGlzbWlzc0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XHJcbiAgICAgICAgdGhpcy5kaXNtaXNzQnV0dG9uLmNsYXNzTGlzdC5hZGQoXHJcbiAgICAgICAgICAgIFwibW9kYWwtYWN0aW9uXCIsXHJcbiAgICAgICAgICAgIFwid2F2ZXMtZWZmZWN0XCIsXHJcbiAgICAgICAgICAgIFwid2F2ZXMtcmVkXCIsXHJcbiAgICAgICAgICAgIFwiYnRuLWZsYXRcIixcclxuICAgICAgICAgICAgXCJidG4tb3JhbmdlXCJcclxuICAgICAgICApO1xyXG4gICAgICAgIHRoaXMuZGlzbWlzc0J1dHRvbi50eXBlID0gXCJidXR0b25cIjtcclxuICAgICAgICB0aGlzLmRpc21pc3NCdXR0b24udGV4dENvbnRlbnQgPSB0aGlzLmRpc21pc3NUZXh0O1xyXG4gICAgICAgIGJ1dHRvbkdyb3VwLmFwcGVuZENoaWxkKHRoaXMuZGlzbWlzc0J1dHRvbik7XHJcblxyXG4gICAgICAgIHRoaXMuYWNjZXB0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcclxuICAgICAgICB0aGlzLmFjY2VwdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKFxyXG4gICAgICAgICAgICBcIm1vZGFsLWFjdGlvblwiLFxyXG4gICAgICAgICAgICBcIndhdmVzLWVmZmVjdFwiLFxyXG4gICAgICAgICAgICBcIndhdmVzLXJlZFwiLFxyXG4gICAgICAgICAgICBcImJ0bi1mbGF0XCIsXHJcbiAgICAgICAgICAgIFwiYnRuLW9yYW5nZVwiXHJcbiAgICAgICAgKTtcclxuICAgICAgICB0aGlzLmFjY2VwdEJ1dHRvbi50eXBlID0gXCJidXR0b25cIjtcclxuICAgICAgICB0aGlzLmFjY2VwdEJ1dHRvbi50ZXh0Q29udGVudCA9IHRoaXMuYWNjZXB0VGV4dDtcclxuICAgICAgICBidXR0b25Hcm91cC5hcHBlbmRDaGlsZCh0aGlzLmFjY2VwdEJ1dHRvbik7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBBcHBlbmRNb2RlbCgpIHtcclxuICAgICAgICB0aGlzLnBhcmVudC5hcHBlbmRDaGlsZCh0aGlzLm1vZGFsKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGRlc3Ryb3koKSB7XHJcbiAgICAgICAgaWYgKHRoaXMubW9kYWxJbnN0YW5jZSkge1xyXG4gICAgICAgICAgICB0aGlzLm1vZGFsSW5zdGFuY2UuY2xvc2UoKTtcclxuICAgICAgICAgICAgdGhpcy5tb2RhbEluc3RhbmNlLmRlc3Ryb3koKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBlbGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNcIiArIHRoaXMuaWRNZXNzc2FnZSk7XHJcbiAgICAgICAgZWxlbS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGVsZW0pO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhc3luYyBDb25maXJtKCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZTxib29sZWFuPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBzb21ldGhpbmdXZW50V3JvbmdVcG9uQ3JlYXRpb24gPVxyXG4gICAgICAgICAgICAgICAgIXRoaXMubW9kYWwgfHwgIXRoaXMuYWNjZXB0QnV0dG9uIHx8ICF0aGlzLmRpc21pc3NCdXR0b247XHJcbiAgICAgICAgICAgIGlmIChzb21ldGhpbmdXZW50V3JvbmdVcG9uQ3JlYXRpb24pIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICAgICAgcmVqZWN0KFwiRmFsbG8gYWxnbyBlbiBsYSBjcmVhY2nDs24gZGVsIG1lbnNhamVcIik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIE0uTW9kYWwuaW5pdCh0aGlzLm1vZGFsLCB7XHJcbiAgICAgICAgICAgICAgICBkaXNtaXNzaWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAuNSxcclxuICAgICAgICAgICAgICAgIGluRHVyYXRpb246IDMwMCxcclxuICAgICAgICAgICAgICAgIG91dER1cmF0aW9uOiAyMDAsXHJcbiAgICAgICAgICAgICAgICBzdGFydGluZ1RvcDogJzYlJyxcclxuICAgICAgICAgICAgICAgIGVuZGluZ1RvcDogJzglJ1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgdGhpcy5tb2RhbEluc3RhbmNlID0gTS5Nb2RhbC5nZXRJbnN0YW5jZSh0aGlzLm1vZGFsKTtcclxuICAgICAgICAgICAgdGhpcy5tb2RhbEluc3RhbmNlLm9wZW4oKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuYWNjZXB0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKHRydWUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5kaXNtaXNzQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKGZhbHNlKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSIsIi8vIEJhc2UgY2xhc3MgZm9yIEh0dHAgb3BlcmF0aW9ucyBHRVQsIFBVVCwgUE9TVCwgREVMRVRFLCBQQVRDSCEhXHJcbmV4cG9ydCBjbGFzcyBIdHRwRmV0Y2hTZXJ2aWNlIHtcclxuXHJcbiAgICBwdWJsaWMgUG9zdDxVPih1cmw6IHN0cmluZywgcGF5bG9hZDogYW55LCBqc29uUmVzcG9uc2UgPSB0cnVlKTogUHJvbWlzZTxVPiB7XHJcbiAgICAgICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlPFU+KChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgZmV0Y2godXJsLCB7XHJcbiAgICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JyxcclxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxyXG4gICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocGF5bG9hZClcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IChqc29uUmVzcG9uc2UpID8gcmVzcG9uc2UuanNvbigpIDogcmVzcG9uc2UudGV4dCgpKVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShkYXRhKTtcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcik7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICByZXR1cm4gcHJvbWlzZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgUG9zdEZvcm08VT4odXJsOiBzdHJpbmcsIHBheWxvYWQ6IGFueSwgdG9rZW46IHN0cmluZyk6IFByb21pc2U8VT4ge1xyXG4gICAgICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZTxVPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgICAgIGZldGNoKHVybCwge1xyXG4gICAgICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsXHJcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7ICdSZXF1ZXN0VmVyaWZpY2F0aW9uVG9rZW4nOiB0b2tlbn0sXHJcbiAgICAgICAgICAgICAgICBib2R5OiBwYXlsb2FkXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpXHJcbiAgICAgICAgICAgICAgICAudGhlbihkYXRhID0+IHtcclxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKTtcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiBwcm9taXNlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBQb3N0Rm9ybVVSTDxVPih1cmw6IHN0cmluZywgcGF5bG9hZDogYW55LCBqc29uUmVzcG9uc2UgPSB0cnVlKTogUHJvbWlzZTxVPiB7XHJcbiAgICAgICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlPFU+KChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgZmV0Y2godXJsLCB7XHJcbiAgICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JyxcclxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxyXG4gICAgICAgICAgICAgICAgYm9keTogcGF5bG9hZFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gKGpzb25SZXNwb25zZSkgPyByZXNwb25zZS5qc29uKCkgOiByZXNwb25zZS50ZXh0KCkpXHJcbiAgICAgICAgICAgICAgICAudGhlbihkYXRhID0+IHtcclxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKTtcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiBwcm9taXNlO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHsgSHR0cEZldGNoU2VydmljZSB9IGZyb20gXCIuL0h0dHBGZXRjaFNlcnZpY2VcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBzZXJ2aWNlcyA9IFtIdHRwRmV0Y2hTZXJ2aWNlXTtcclxuXHJcbmV4cG9ydCAqIGZyb20gXCIuL0h0dHBGZXRjaFNlcnZpY2VcIjsiLCJleHBvcnQgY2xhc3MgQXJlYSB7XHJcbiAgICBJZEFyZWE6IHN0cmluZztcclxuICAgIE5vbWJyZTogc3RyaW5nO1xyXG59IiwiZXhwb3J0IGNsYXNzIENhYmV6b3RlIHtcclxuICAgIFBsYWNhOiBzdHJpbmc7XHJcbn0iLCJleHBvcnQgY2xhc3MgQ29uZHVjdG9yIHtcclxuICAgIE5vbWJyZTogc3RyaW5nO1xyXG4gICAgQ2VkdWxhOiBzdHJpbmc7XHJcbn0iLCJleHBvcnQgY2xhc3MgTGluZWEge1xyXG4gICAgTGluZWE6IHN0cmluZztcclxuICAgIFRlcm1pbmFsOiBzdHJpbmc7XHJcbiAgICBQcm9kdWN0bzogc3RyaW5nO1xyXG4gICAgRXN0YWRvOiBzdHJpbmc7XHJcbiAgICBWb2x1bWVuOiBudW1iZXI7XHJcbiAgICBEZW5zaWRhZDogbnVtYmVyO1xyXG4gICAgT2JzZXJ2YWNpb25lczogc3RyaW5nO1xyXG59IiwiZXhwb3J0IGNsYXNzIExvZyB7XHJcbiAgICBJZDogc3RyaW5nO1xyXG4gICAgRmVjaGFFdmVudG86IHN0cmluZztcclxuICAgIEFwbGljYWNpb246IHN0cmluZ1xyXG4gICAgQXJlYTogc3RyaW5nXHJcbiAgICBTZWNjaW9uOiBzdHJpbmdcclxuICAgIEFjY2lvbjogc3RyaW5nXHJcbiAgICBPYmpldGl2bzogc3RyaW5nXHJcbiAgICBFbnRpZGFkOiBzdHJpbmdcclxuICAgIFByaW9yaWRhZDogc3RyaW5nXHJcbiAgICBDb21lbnRhcmlvOiBzdHJpbmdcclxufSIsImV4cG9ydCBjbGFzcyBUcmFpbGVyIHtcclxuICAgIFBsYWNhOiBzdHJpbmc7XHJcbn0iLCJleHBvcnQgY2xhc3MgVXN1YXJpbyB7XHJcbiAgICBJbWFnZW46IEZpbGU7XHJcbiAgICBJZFVzdWFyaW86IHN0cmluZztcclxuICAgIE5vbWJyZTogc3RyaW5nO1xyXG4gICAgUm9sOiBzdHJpbmc7XHJcbiAgICBFbWFpbDogc3RyaW5nO1xyXG4gICAgVGVsZWZvbm86IHN0cmluZztcclxufSIsImltcG9ydCB7IElNZXNzYWdlUmVzcG9uc2UgfSBmcm9tIFwiLi9NZXNzYWdlUmVzcG9uc2VcIjtcclxuaW1wb3J0IHsgVXN1YXJpbyB9IGZyb20gXCIuL1VzdWFyaW9cIjtcclxuaW1wb3J0IHsgQ2FiZXpvdGUgfSBmcm9tIFwiLi9DYWJlem90ZVwiO1xyXG5pbXBvcnQgeyBUcmFpbGVyIH0gZnJvbSBcIi4vVHJhaWxlclwiO1xyXG5pbXBvcnQgeyBDb25kdWN0b3IgfSBmcm9tIFwiLi9Db25kdWN0b3JcIjtcclxuaW1wb3J0IHsgQXJlYSB9IGZyb20gXCIuL0FyZWFcIjtcclxuaW1wb3J0IHsgTG9nIH0gZnJvbSBcIi4vTG9nXCI7XHJcbmltcG9ydCB7IExpbmVhIH0gZnJvbSBcIi4vTGluZWFcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBtb2RlbHMgPSBbVXN1YXJpbywgQ2FiZXpvdGUsIFRyYWlsZXIsIENvbmR1Y3RvciwgQXJlYSwgTG9nLCBMaW5lYV07XHJcblxyXG5leHBvcnQgKiBmcm9tIFwiLi9NZXNzYWdlUmVzcG9uc2VcIjtcclxuZXhwb3J0ICogZnJvbSBcIi4vVXN1YXJpb1wiO1xyXG5leHBvcnQgKiBmcm9tIFwiLi9DYWJlem90ZVwiO1xyXG5leHBvcnQgKiBmcm9tIFwiLi9UcmFpbGVyXCI7XHJcbmV4cG9ydCAqIGZyb20gXCIuL0NvbmR1Y3RvclwiO1xyXG5leHBvcnQgKiBmcm9tIFwiLi9BcmVhXCI7XHJcbmV4cG9ydCAqIGZyb20gXCIuL0xvZ1wiO1xyXG5leHBvcnQgKiBmcm9tIFwiLi9MaW5lYVwiOyIsImRlY2xhcmUgZ2xvYmFsIHtcclxuICAgIGludGVyZmFjZSBIVE1MRWxlbWVudCB7XHJcbiAgICAgICAgb24oZXZlbnRUeXBlOiBzdHJpbmcsIGNoaWxkU2VsZWN0b3I6IHN0cmluZywgZXZlbnRIYW5kbGVyOiBhbnkpOiB2b2lkO1xyXG4gICAgfVxyXG59XHJcblxyXG5IVE1MRWxlbWVudC5wcm90b3R5cGUub24gPSBmdW5jdGlvbiAoZXZlbnRUeXBlOiBzdHJpbmcsIGNoaWxkU2VsZWN0b3I6IHN0cmluZywgZXZlbnRIYW5kbGVyOiBhbnkpOiB2b2lkIHtcclxuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGV2ZW50T25FbGVtZW50ID0+IHtcclxuICAgICAgICBpZiAoZXZlbnRPbkVsZW1lbnQudGFyZ2V0Lm1hdGNoZXMoY2hpbGRTZWxlY3RvcikpIHtcclxuICAgICAgICAgICAgZXZlbnRIYW5kbGVyKGV2ZW50T25FbGVtZW50KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhldmVudE9uRWxlbWVudC50YXJnZXQpO1xyXG4gICAgICAgIH1cclxuICAgIH0pXHJcbn1cclxuXHJcbmV4cG9ydCB7IH07IiwiZXhwb3J0IGNsYXNzIEpRVmFsaWRhdGlvbnMge1xyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgTWF4RmlsZVNpemVWYWxpZGF0aW9uKCk6IHZvaWQge1xyXG4gICAgICAgIGlmICgkLnZhbGlkYXRvci5tZXRob2RzWydtYXhmaWxlc2l6ZSddKVxyXG4gICAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgICQudmFsaWRhdG9yLmFkZE1ldGhvZCgnbWF4ZmlsZXNpemUnLCBmdW5jdGlvbiAodmFsdWUsIGVsZW1lbnQsIHBhcmFtcykge1xyXG4gICAgICAgICAgICBsZXQgaW5wdXQgPSAoZWxlbWVudCBhcyBIVE1MSW5wdXRFbGVtZW50KTtcclxuICAgICAgICAgICAgbGV0IHNpemUgPSBwYXJhbXMsIGZpbGUgPSAoaW5wdXQuZmlsZXNbMF0gYXMgRmlsZSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoZmlsZSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKChmaWxlLnNpemUgLyAxMDI0KSA+IHNpemUpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQudmFsaWRhdG9yLnVub2J0cnVzaXZlLmFkYXB0ZXJzLmFkZCgnbWF4ZmlsZXNpemUnLCBbJ3NpemUnXSwgZnVuY3Rpb24gKG9wdGlvbnMpIHtcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcInJlZ2lzdHJhIG1heGZpbGVzaXplIGVuIHVub2J0cnVzaXZlXCIpO1xyXG4gICAgICAgICAgICBvcHRpb25zLnJ1bGVzWydtYXhmaWxlc2l6ZSddID0gb3B0aW9ucy5wYXJhbXNbJ3NpemUnXTtcclxuICAgICAgICAgICAgb3B0aW9ucy5tZXNzYWdlc1snbWF4ZmlsZXNpemUnXSA9IG9wdGlvbnMubWVzc2FnZTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIEFsbG93ZWRFeHRlbnNpb25zVmFsaWRhdGlvbigpOiB2b2lkIHtcclxuICAgICAgICBpZiAoJC52YWxpZGF0b3IubWV0aG9kc1snYWxsb3dlZGV4dGVuc2lvbnMnXSlcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgICAgICAkLnZhbGlkYXRvci5hZGRNZXRob2QoJ2FsbG93ZWRleHRlbnNpb25zJywgZnVuY3Rpb24gKHZhbHVlLCBlbGVtZW50LCBwYXJhbXMpIHtcclxuICAgICAgICAgICAgbGV0IGlucHV0ID0gKGVsZW1lbnQgYXMgSFRNTElucHV0RWxlbWVudCk7XHJcbiAgICAgICAgICAgIGxldCBleHRzID0gcGFyYW1zLCBmaWxlID0gKGlucHV0LmZpbGVzWzBdIGFzIEZpbGUpO1xyXG4gICAgICAgICAgICBsZXQgZXh0c0FycmF5ID0gZXh0cy5zcGxpdCgnLCcpO1xyXG5cclxuICAgICAgICAgICAgaWYgKGZpbGUpIHtcclxuICAgICAgICAgICAgICAgIGlmICgobmV3IFJlZ0V4cCgnKCcgKyBleHRzQXJyYXkuam9pbignfCcpLnJlcGxhY2UoL1xcLi9nLCAnXFxcXC4nKSArICcpJCcpKS50ZXN0KHZhbHVlKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkLnZhbGlkYXRvci51bm9idHJ1c2l2ZS5hZGFwdGVycy5hZGQoJ2FsbG93ZWRleHRlbnNpb25zJywgWydleHRzJ10sIGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICAgICAgICAgIG9wdGlvbnMucnVsZXNbJ2FsbG93ZWRleHRlbnNpb25zJ10gPSBvcHRpb25zLnBhcmFtc1snZXh0cyddO1xyXG4gICAgICAgICAgICBvcHRpb25zLm1lc3NhZ2VzWydhbGxvd2VkZXh0ZW5zaW9ucyddID0gb3B0aW9ucy5tZXNzYWdlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0ICogZnJvbSAnLi9IdHRwJztcclxuZXhwb3J0ICogZnJvbSAnLi9Nb2RlbHMnO1xyXG5leHBvcnQgKiBmcm9tICcuL1V0aWxzL0hUTUxFeHRlbnNpb25zJzsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHRpZihfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdKSB7XG5cdFx0cmV0dXJuIF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0uZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIG1vZHVsZSBleHBvcnRzIG11c3QgYmUgcmV0dXJuZWQgZnJvbSBydW50aW1lIHNvIGVudHJ5IGlubGluaW5nIGlzIGRpc2FibGVkXG4vLyBzdGFydHVwXG4vLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbnJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKFwiLi9TY3JpcHRzL1BhZ2VzL0NhYmV6b3Rlcy9DYWJlem90ZXMudHNcIik7XG4iXSwic291cmNlUm9vdCI6IiJ9