/*! For license information please see Log.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.sample=t():e.sample=t()}(self,(function(){return(()=>{"use strict";var e={"./Scripts/Pages/Log/Log.ts":function(e,t,o){var r=this&&this.__awaiter||function(e,t,o,r){return new(o||(o=Promise))((function(n,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))},n=this&&this.__generator||function(e,t){var o,r,n,i,a={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(o)throw new TypeError("Generator is already executing.");for(;a;)try{if(o=1,r&&(n=2&i[0]?r.return:i[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,i[1])).done)return n;switch(r=0,n&&(i=[2&i[0],n.value]),i[0]){case 0:case 1:n=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((n=(n=a.trys).length>0&&n[n.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!n||i[1]>n[0]&&i[1]<n[3])){a.label=i[1];break}if(6===i[0]&&a.label<n[1]){a.label=n[1],n=i;break}if(n&&a.label<n[2]){a.label=n[2],a.ops.push(i);break}n[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{o=n=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.LogsPage=void 0;var i=o("./Scripts/Shared/index.ts"),a=o("./Scripts/Shared/Components/ConfigureDataTable.ts"),s=function(){function e(){this.Init()}return e.prototype.Destroy=function(){this.Table.destroy(!1)},e.prototype.Init=function(){this.InicializarButtons(),this.InicializarControls()},e.prototype.InicializarControls=function(){var e=this;this.Table=(new a.ConfigureDataTable).Configure("#data-table-log",[{width:"5%",targets:0}]),document.getElementById("search").addEventListener("click",(function(t){return e.BuscarLogs()})),document.getElementById("insert").addEventListener("click",(function(t){return e.Insertar()}))},e.prototype.BuscarLogs=function(){return r(this,void 0,void 0,(function(){var e,t,o,r,s,c=this;return n(this,(function(n){try{return e=document.getElementById("fechaInicial").value,t=document.getElementById("horaInicial").value,o=document.getElementById("fechaFinal").value,r=document.getElementById("horaFinal").value,""!=e&&""!=t&&""!=o&&""!=r?(s={fechaInicial:e,horaInicial:t,fechaFinal:o,horaFinal:r},(new i.HttpFetchService).Post("/Log/BuscarRegistros",s,!1).then((function(e){if(e){document.getElementById("log-list").innerHTML=e,c.Table=(new a.ConfigureDataTable).Configure("#data-table-log");var t=c.Table.rows().count();M.toast({html:"Busqueda finalizada, encontrados: "+t,classes:"succes"})}else M.toast({html:e,classes:"error"})})).catch((function(e){M.toast({html:"No es posible consultar los datos: "+e,classes:"error"}),console.log(e)}))):M.toast({html:"Formato de fecha incorrecto",classes:"error"}),[2,!1]}catch(e){M.toast({html:"Formato de fecha incorrecto",classes:"error"})}return[2]}))}))},e.prototype.Insertar=function(){return r(this,void 0,void 0,(function(){var e,t,o,r,a;return n(this,(function(n){try{return e=document.getElementById("fechaInicial").value,t=document.getElementById("horaInicial").value,o=document.getElementById("fechaFinal").value,r=document.getElementById("horaFinal").value,a={fechaInicial:e,horaInicial:t,fechaFinal:o,horaFinal:r},(new i.HttpFetchService).Post("/Log/InsertarLogEjemplo",a,!1).then((function(e){e?M.toast({html:"Insercion finalizada",classes:"succes"}):M.toast({html:e,classes:"error"})})).catch((function(e){M.toast({html:"No es posible consultar los datos: "+e,classes:"error"}),console.log(e)})),[2,!1]}catch(e){M.toast({html:"Formato de fecha incorrecto",classes:"error"})}return[2]}))}))},e.prototype.InicializarButtons=function(){document.getElementById("data-table-log")},e}();t.LogsPage=s;var c=new s;document.addEventListener("turbolinks:render",(function(e){-1!=document.URL.indexOf("/Log/Index")?c?c.Init():c=new s:null==c||c.Destroy()}))},"./Scripts/Shared/Components/ConfigureDataTable.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigureDataTable=void 0;var o=function(){function e(){}return e.prototype.Configure=function(e,t){var o=$(e).DataTable({columnDefs:t,responsive:!0,language:{processing:"Procesando...",lengthMenu:"Mostrar _MENU_ registros",zeroRecords:"No se encontraron resultados",emptyTable:"Ningún dato disponible en esta tabla",info:"Mostrando del _START_ al _END_ de _TOTAL_ registros",infoEmpty:"Mostrando del 0 al 0 de 0 registros",infoFiltered:"(filtrado de un total de _MAX_ registros)",search:"Buscar:",thousands:",",loadingRecords:"Cargando...",paginate:{first:"Primero",last:"Último",next:"Siguiente",previous:"Anterior"},aria:{sortAscending:": Activar para ordenar la columna de manera ascendente",sortDescending:": Activar para ordenar la columna de manera descendente"}}});return this.FilterGlobal(o),o},e.prototype.FilterGlobal=function(e){$("input#global_filter").on("keyup click",(function(){e.search($("#global_filter").val().toString(),$("#global_regex").prop("checked"),$("#global_smart").prop("checked")).draw()})),$("input.column_filter").on("keyup click",(function(){var t=$(this).parents("tr").attr("data-column");e.column(t).search($("#col"+t+"_filter").val().toString(),$("#col"+t+"_regex").prop("checked"),$("#col"+t+"_smart").prop("checked")).draw()}))},e}();t.ConfigureDataTable=o},"./Scripts/Shared/Http/HttpFetchService.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.HttpFetchService=void 0;var o=function(){function e(){}return e.prototype.Post=function(e,t,o){return void 0===o&&(o=!0),new Promise((function(r,n){fetch(e,{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then((function(e){return o?e.json():e.text()})).then((function(e){r(e)})).catch((function(e){console.log(e),n(e)}))}))},e.prototype.PostForm=function(e,t,o){return new Promise((function(r,n){fetch(e,{method:"post",headers:{RequestVerificationToken:o},body:t}).then((function(e){return e.json()})).then((function(e){r(e)})).catch((function(e){console.log(e),n(e)}))}))},e.prototype.PostFormURL=function(e,t,o){return void 0===o&&(o=!0),new Promise((function(r,n){fetch(e,{method:"post",headers:{"Content-Type":"application/json"},body:t}).then((function(e){return o?e.json():e.text()})).then((function(e){r(e)})).catch((function(e){console.log(e),n(e)}))}))},e}();t.HttpFetchService=o},"./Scripts/Shared/Http/index.ts":function(e,t,o){var r=this&&this.__createBinding||(Object.create?function(e,t,o,r){void 0===r&&(r=o),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[o]}})}:function(e,t,o,r){void 0===r&&(r=o),e[r]=t[o]}),n=this&&this.__exportStar||function(e,t){for(var o in e)"default"===o||Object.prototype.hasOwnProperty.call(t,o)||r(t,e,o)};Object.defineProperty(t,"__esModule",{value:!0}),t.services=void 0;var i=o("./Scripts/Shared/Http/HttpFetchService.ts");t.services=[i.HttpFetchService],n(o("./Scripts/Shared/Http/HttpFetchService.ts"),t)},"./Scripts/Shared/Models/Area.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Area=void 0;t.Area=function(){}},"./Scripts/Shared/Models/Cabezote.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Cabezote=void 0;t.Cabezote=function(){}},"./Scripts/Shared/Models/Conductor.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Conductor=void 0;t.Conductor=function(){}},"./Scripts/Shared/Models/Linea.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Linea=void 0;t.Linea=function(){}},"./Scripts/Shared/Models/Log.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Log=void 0;t.Log=function(){}},"./Scripts/Shared/Models/MessageResponse.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0})},"./Scripts/Shared/Models/Trailer.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Trailer=void 0;t.Trailer=function(){}},"./Scripts/Shared/Models/Usuario.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Usuario=void 0;t.Usuario=function(){}},"./Scripts/Shared/Models/index.ts":function(e,t,o){var r=this&&this.__createBinding||(Object.create?function(e,t,o,r){void 0===r&&(r=o),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[o]}})}:function(e,t,o,r){void 0===r&&(r=o),e[r]=t[o]}),n=this&&this.__exportStar||function(e,t){for(var o in e)"default"===o||Object.prototype.hasOwnProperty.call(t,o)||r(t,e,o)};Object.defineProperty(t,"__esModule",{value:!0}),t.models=void 0;var i=o("./Scripts/Shared/Models/Usuario.ts"),a=o("./Scripts/Shared/Models/Cabezote.ts"),s=o("./Scripts/Shared/Models/Trailer.ts"),c=o("./Scripts/Shared/Models/Conductor.ts"),l=o("./Scripts/Shared/Models/Area.ts"),u=o("./Scripts/Shared/Models/Log.ts"),d=o("./Scripts/Shared/Models/Linea.ts");t.models=[i.Usuario,a.Cabezote,s.Trailer,c.Conductor,l.Area,u.Log,d.Linea],n(o("./Scripts/Shared/Models/MessageResponse.ts"),t),n(o("./Scripts/Shared/Models/Usuario.ts"),t),n(o("./Scripts/Shared/Models/Cabezote.ts"),t),n(o("./Scripts/Shared/Models/Trailer.ts"),t),n(o("./Scripts/Shared/Models/Conductor.ts"),t),n(o("./Scripts/Shared/Models/Area.ts"),t),n(o("./Scripts/Shared/Models/Log.ts"),t),n(o("./Scripts/Shared/Models/Linea.ts"),t)},"./Scripts/Shared/Utils/HTMLExtensions.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),HTMLElement.prototype.on=function(e,t,o){this.addEventListener(e,(function(e){e.target.matches(t)?o(e):console.log(e.target)}))}},"./Scripts/Shared/index.ts":function(e,t,o){var r=this&&this.__createBinding||(Object.create?function(e,t,o,r){void 0===r&&(r=o),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[o]}})}:function(e,t,o,r){void 0===r&&(r=o),e[r]=t[o]}),n=this&&this.__exportStar||function(e,t){for(var o in e)"default"===o||Object.prototype.hasOwnProperty.call(t,o)||r(t,e,o)};Object.defineProperty(t,"__esModule",{value:!0}),n(o("./Scripts/Shared/Http/index.ts"),t),n(o("./Scripts/Shared/Models/index.ts"),t),n(o("./Scripts/Shared/Utils/HTMLExtensions.ts"),t)}},t={};return function o(r){if(t[r])return t[r].exports;var n=t[r]={exports:{}};return e[r].call(n.exports,n,n.exports,o),n.exports}("./Scripts/Pages/Log/Log.ts")})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,