{"version":3,"sources":["webpack/universalModuleDefinition","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Core\\Page.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Pages\\Lineas\\GestionLineas.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Pages\\Lineas\\Lineas.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Components\\ConfigureDataTable.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Components\\ConfirmModalMessage.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Http\\HttpFetchService.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Http\\index.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\ActionsPermission.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\Area.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\Cabezote.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\Compañia.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\Conductor.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\Contador.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\Despacho.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\FechasCorteDTO.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\Linea.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\Log.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\ProcesamientoArchivos.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\Producto.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\Proveedor.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\Rol.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\Tanque.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\Terminal.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\Trailer.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\Usuario.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Models\\index.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Utils\\HTMLExtensions.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Utils\\JQValidations.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Utils\\MaskFormats.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Utils\\MaskFormatsManager.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Utils\\SelectorMenu.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\Utils\\index.ts","C:\\Users\\desarrollador10\\source\\repos\\KAIROSV2\\KAIROSV2\\KAIROSV2.WebApp\\Scripts\\Shared\\index.ts","webpack/bootstrap","webpack/runtime/define property getters","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"names":["root","factory","exports","module","define","amd","self","customParseFormat","dayjs","locale","extend","this","AdjustValidation","RegisterMasks","masks","MaskManager","MaskFormatsManager","GetPermissions","url","HttpFetchService","Post","then","data","Permisions","catch","error","ActionsPermission","Destroy","$","validator","methods","range","value","element","param","globalizedValue","replace","optional","Page","modalBase","_baseUrl","_httpService","_maskManager","_modalBase","InicializarModal","RegistrarFormatos","_modalInstance","M","Modal","init","dismissible","opacity","inDuration","outDuration","startingTop","endingTop","NuevoLinea","innerHTML","InicilizarFormLinea","ApplyMasks","open","DatosLinea","idLinea","idTerminal","lectura","payload","IdLinea","IdTerminal","_lineaIdActualizar","modoCreacion","select2","dropdownAutoWidth","width","updateTextFields","_formLinea","document","querySelector","_formData","FormData","removeData","unobtrusive","parse","getElementById","addEventListener","ev","CerrarModal","onsubmit","e","preventDefault","valid","SetUnmaskedFormValue","GuardarLinea","ActualizarLinea","token","get","toString","PostForm","Result","LimpiarFormulario","onLineasCreado","Payload","toast","html","Message","classes","err","console","log","onLineasActualizado","reset","not","val","trigger","focus","bonsai","blur","close","parentNode","removeChild","MaskFormats","IntegerFormatRang","DecimalFormatRang","LineasGestionPage","BaseUrl","Init","Table","destroy","InicializarButtons","InicializarControls","SelectorMenu","SeleccionEnElMenu","ConfigureDataTable","Configure","gestionLineas","linea","AgregarFilaDatatable","ActualizarFilaDatatable","JQValidations","MaxFileSizeValidation","AllowedExtensionsValidation","table","lineaAdd","on","event","target","matches","EditarLinea","BorrarLinea","CrearLinea","lineaId","dataset","lineaid","terminalId","terminalid","terminal","ConfirmModalMessage","Confirm","BorrarFilaDatatable","$tr","closest","prev","hasClass","row","remove","draw","newLinea","add","Terminal","Idlinea","Producto","EstadoColor","Estado","Capacidad","DensidadAforo","Observaciones","DisableAction","Editar","Borrar","node","id","line","IntegerFormat","DecimalFormat","habilitado","LineasPage","lineasPage","URL","indexOf","columns","DataTable","columnDefs","responsive","language","FilterGlobal","ConfigureScrollX","columnsDef","inputId","scrollX","ConfigureScrollXSinInfo","paging","ordering","searching","info","input","search","prop","column","parents","attr","title","message","acceptText","dismissText","idMesssage","parent","body","CreateModal","AppendModel","modal","createElement","classList","content","appendChild","header","textContent","buttonGroup","dismissButton","type","acceptButton","modalInstance","elem","Promise","resolve","reject","getInstance","jsonResponse","fetch","method","headers","JSON","stringify","response","json","text","PostFormURL","services","Area","Cabezote","Conductor","Contador","Despacho","FechasCorteDTO","Linea","Log","MapeoArchivos","Paso1Mapeo","Paso2Mapeo","Proveedor","Rol","Tanque","Trailer","Usuario","models","Compañia","HTMLElement","prototype","eventType","childSelector","eventHandler","eventOnElement","addMethod","params","size","file","files","adapters","options","rules","messages","exts","extsArray","split","RegExp","join","test","NotEqualValidation","IdName","ActualValue","Id","Selector","Mask","mask","Number","scale","signed","thousandsSeparator","padFractionalZeros","normalizeZeros","radix","mapToRadix","DateShortFormat","overwrite","autofix","blocks","MMM","MaskedEnum","enum","DateLongFormat","HH","MaskedRange","from","to","TT","selector","rangoMinimo","rangoMaximo","min","max","Alfanumerico","lazy","NumericoSinSignos","FormatElements","Array","CleanAll","Masks","CleanFormats","forEach","index","object","ApplyFormat","AddApplyMask","push","UnmaskFormats","MaskInput","el","unmaskedValue","masked","formData","set","name","UpdateValue","selectors","length","formatEl","filter","updateValue","querySelectorAll","splice","location","href","contador","substr","removeClass","css","addClass","identi","identi2","first","components","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","call","m","x","d","definition","key","o","Object","defineProperty","enumerable","obj","hasOwnProperty","r","Symbol","toStringTag","installedChunks","deferredModules","checkDeferredModules","webpackJsonpCallback","parentChunkLoadingFunction","chunkId","chunkIds","moreModules","runtime","executeModules","i","resolves","shift","apply","chunkLoadingGlobal","checkDeferredModulesImpl","result","deferredModule","fulfilled","j","depId","s","bind","startup"],"mappings":"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","file":"js/pages/lineas.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"kairosv2\"] = factory();\n\telse\n\t\troot[\"kairosv2\"] = factory();\n})(self, function() {\nreturn ","import dayjs = require(\"dayjs\");\r\nimport { IMaskFormat, MaskFormatsManager } from \"../Shared/Utils\";\r\nimport 'dayjs/locale/es-do';\r\nimport { ActionsPermission } from \"../Shared/Models/ActionsPermission\";\r\nimport { HttpFetchService } from \"../Shared\";\r\n\r\nvar customParseFormat = require('dayjs/plugin/customParseFormat');\r\n\r\nexport abstract class Page {\r\n    public MaskManager: MaskFormatsManager;\r\n    public BaseUrl;\r\n    public Permisions: ActionsPermission;\r\n\r\n    constructor() {\r\n        dayjs.locale('es-do');\r\n        dayjs.extend(customParseFormat);\r\n        this.AdjustValidation();\r\n    }\r\n\r\n    protected RegisterMasks(masks: Array<IMaskFormat>): void {\r\n        if (!this.MaskManager) {\r\n            this.MaskManager = new MaskFormatsManager();\r\n        }\r\n\r\n        this.MaskManager.RegisterMasks(masks);\r\n    }\r\n\r\n    protected GetPermissions(url: string): void {\r\n        const httpService = new HttpFetchService();\r\n        httpService.Post<ActionsPermission>(url, \"\", true)\r\n            .then((data) => {\r\n                if (data) {\r\n                    this.Permisions = data;\r\n                }\r\n            }).catch((error) => {\r\n                this.Permisions = new ActionsPermission();\r\n            });\r\n    }\r\n\r\n    public Destroy(): void {\r\n        this.MaskManager?.Destroy();\r\n    }\r\n\r\n    private AdjustValidation(): void {\r\n        $.validator.methods.range = function (value, element, param) {\r\n            var globalizedValue = value.replace(\",\", \"\");\r\n            let result = this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);\r\n            return result;\r\n        }\r\n    }\r\n}","import { HttpFetchService, IMessageResponse, Log } from '../../Shared';\r\nimport { Linea } from '../../Shared/Models/Linea';\r\n\r\nimport 'jquery-qubit';\r\nimport 'jquery-bonsai';\r\nimport 'jquery-bonsai/jquery.bonsai.css';\r\nimport 'select2';\r\nimport 'select2/dist/css/select2.css';\r\nimport { MaskFormats, IMaskFormat } from '../../Shared/Utils/MaskFormats';\r\nimport IMask from \"imask\";\r\nimport { MaskFormatsManager } from '../../Shared/Utils';\r\n\r\nexport class LineasGestionPage {\r\n\r\n    //PROPIEDADES\r\n    public onLineasCreado?: (linea: Linea) => void;\r\n    public onLineasActualizado?: (linea: Linea) => void;\r\n\r\n    //CAMPOS\r\n    private _baseUrl = \"/Lineas\";\r\n    private _httpService: HttpFetchService;\r\n    private _modalInstance: M.Modal;\r\n    private _modalBase: HTMLElement;\r\n    private _formLinea: HTMLFormElement;\r\n    //private _selects: M.FormSelect[];\r\n    //private _collaps: M.Collapsible[];\r\n    private _formData: FormData;\r\n    private _lineaIdActualizar: string;\r\n    private _maskManager: MaskFormatsManager;\r\n\r\n    //CONSTRUCTOR\r\n    constructor(modalBase: HTMLElement) {\r\n\r\n        this._httpService = new HttpFetchService();\r\n        this._maskManager = new MaskFormatsManager();\r\n        this._modalBase = modalBase;\r\n        this.InicializarModal();\r\n        this.RegistrarFormatos();\r\n    }\r\n\r\n    //METODOS\r\n\r\n    //Inicializar control modal\r\n    private InicializarModal() {\r\n\r\n        this._modalInstance = M.Modal.init(this._modalBase, {\r\n            dismissible: false,\r\n            opacity: .5,\r\n            inDuration: 300,\r\n            outDuration: 200,\r\n            startingTop: '6%',\r\n            endingTop: '8%'\r\n        });\r\n\r\n    }\r\n\r\n    //Creación de nueva linea\r\n    public NuevoLinea() {\r\n\r\n        this._httpService.Post<string>(this._baseUrl + \"/NuevaLinea\", null, false)\r\n            .then((data) => {\r\n\r\n                this._modalBase.innerHTML = data;\r\n                this.InicilizarFormLinea(true);\r\n                this._maskManager.ApplyMasks();\r\n            });\r\n\r\n        this._modalInstance.open();\r\n    }\r\n\r\n    //Edicion de linea\r\n    public DatosLinea(idLinea: string, idTerminal: string, lectura: boolean) {\r\n\r\n        var payload = { IdLinea: idLinea, IdTerminal: idTerminal, lectura: lectura };\r\n        this._lineaIdActualizar = idLinea;\r\n\r\n        this._httpService.Post<string>(this._baseUrl + \"/EditarLinea\", payload, false)\r\n            .then((data) => {\r\n                this._modalBase.innerHTML = data;\r\n                this.InicilizarFormLinea(false);\r\n                this._maskManager.ApplyMasks();\r\n            });\r\n\r\n        this._modalInstance.open();\r\n    }\r\n\r\n    //Inicializar controles de formulario\r\n    private InicilizarFormLinea(modoCreacion: boolean): void {\r\n\r\n        $(\".select2\").select2({ dropdownAutoWidth: true, width: '100%' });\r\n\r\n        M.updateTextFields();\r\n\r\n        this._formLinea = document.querySelector(\"#linea-form\");\r\n        this._formData = new FormData(this._formLinea);\r\n        $(this._formLinea).removeData(\"validator\").removeData(\"unobtrusiveValidation\");\r\n        $.validator.unobtrusive.parse(this._formLinea);\r\n        document.getElementById(\"linea-modal-cancel\").addEventListener('click', (ev) => this.CerrarModal());\r\n\r\n        this._formLinea.onsubmit = (e) => {\r\n\r\n            e.preventDefault();\r\n\r\n            if ($(this._formLinea).valid()) {\r\n\r\n                this._formData = new FormData(this._formLinea);\r\n                this._maskManager.SetUnmaskedFormValue(this._formData);\r\n\r\n                //formData.forEach((value, key) => { console.log(key + \": \" + value) });\r\n\r\n                if (modoCreacion)\r\n                    this.GuardarLinea();\r\n                else\r\n                    this.ActualizarLinea();\r\n            }\r\n\r\n            return false; // prevent reload\r\n        };\r\n\r\n    }\r\n\r\n    //Guardar linea\r\n    private GuardarLinea(): void {\r\n\r\n        let token = this._formData.get(\"RequestVerificationToken\")?.toString(); // FormData accede a los campos del formulario para hacer get/set de valores\r\n\r\n        this._httpService.PostForm<IMessageResponse>(this._baseUrl + \"/CrearLinea\", this._formData, token)\r\n            .then((data) => {\r\n                if (data.Result) {\r\n                    this.LimpiarFormulario();\r\n                    if (this.onLineasCreado)\r\n                        this.onLineasCreado((data.Payload as Linea));\r\n                }\r\n                M.toast({ html: data.Message, classes: (data.Result) ? \"succes\" : \"error\" });\r\n\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    //Actualizar linea\r\n    private ActualizarLinea(): void {\r\n\r\n        let token = this._formData.get(\"RequestVerificationToken\")?.toString();\r\n\r\n        this._httpService.PostForm<IMessageResponse>(this._baseUrl + \"/ActualizarLinea\", this._formData, token)\r\n            .then((data) => {\r\n                if (data.Result) {\r\n\r\n                    if (this.onLineasActualizado)\r\n                        this.onLineasActualizado((data.Payload as Linea));\r\n                    this.LimpiarFormulario();\r\n                    this.CerrarModal();\r\n                }\r\n                M.toast({ html: data.Message, classes: (data.Result) ? \"succes\" : \"error\" });\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    //Reset de formulario\r\n    private LimpiarFormulario() {\r\n\r\n        this._formLinea.reset();\r\n        $('input').not(\"input[type= 'hidden']\").val(null); // Elementos input que no son type= 'hidden'\r\n        $('.select2').val(null).trigger('change');\r\n        $('#linea-observaciones').focus();\r\n        M.updateTextFields();\r\n        $(\"ul#linea-terminals\").bonsai('update');\r\n        $('#linea-observaciones').blur();\r\n        //this._maskManager.ApplyMasks();\r\n    }\r\n\r\n    //Cerrar control modal\r\n    private CerrarModal() {\r\n\r\n        //this._collaps.every((collaps) => collaps.destroy());\r\n        this._modalInstance.close();\r\n        this._formLinea.parentNode.removeChild(this._formLinea);\r\n        this._lineaIdActualizar = \"\";\r\n    }\r\n\r\n    //Formatear inputs\r\n    private RegistrarFormatos() {\r\n\r\n        //registrar mascaras \r\n        this._maskManager.RegisterMasks(\r\n            [\r\n                MaskFormats.IntegerFormatRang('#linea-Capacidad', 0, 5000000),\r\n                MaskFormats.DecimalFormatRang('#linea-densidad', 0, 100),\r\n            ]);\r\n\r\n    }\r\n\r\n}","import { HttpFetchService, IMessageResponse, Linea } from '../../Shared';\r\nimport { ConfirmModalMessage } from '../../Shared/Components/ConfirmModalMessage';\r\nimport { ConfigureDataTable } from '../../Shared/Components/ConfigureDataTable';\r\n\r\nimport { LineasGestionPage } from './GestionLineas';\r\nimport { JQValidations } from '../../Shared/Utils/JQValidations';\r\nimport { SelectorMenu } from '../../Shared/Utils/SelectorMenu';\r\n\r\nimport { MaskFormats, IMaskFormat } from '../../Shared/Utils/MaskFormats';\r\nimport IMask from \"imask\";\r\nimport { MaskFormatsManager } from '../../Shared/Utils';\r\nimport { Page } from '../../Core/Page';\r\n\r\n\r\nexport class LineasPage extends Page {\r\n\r\n    private Table: DataTables.Api;\r\n    private modalInstance: M.Modal;\r\n    private gestionLineas: LineasGestionPage;\r\n    private _maskManager: MaskFormatsManager;\r\n    \r\n\r\n    constructor() {\r\n        super();\r\n        this.BaseUrl = \"/Lineas/Index\";\r\n        this._maskManager = new MaskFormatsManager();\r\n        this.Init();\r\n        this.RegistrarFormatos();\r\n    }\r\n\r\n    public Destroy() {\r\n        super.Destroy();\r\n        this.Table.destroy(false);\r\n        //this.Table.rows().invalidate().draw();\r\n    }\r\n\r\n    public Init() {\r\n\r\n        this.InicializarButtons();\r\n        this.InicializarControls();\r\n        super.GetPermissions(\"/Lineas/ObtenerPermisos\");\r\n    }\r\n\r\n    private InicializarControls() {\r\n\r\n        SelectorMenu.SeleccionEnElMenu();\r\n        this.Table = new ConfigureDataTable().Configure(\"#data-table-lineas\", [{ \"width\": \"5%\", \"targets\": 0 }]);\r\n        this.gestionLineas = new LineasGestionPage(document.getElementById(\"linea-modal\"));\r\n        this.gestionLineas.onLineasCreado = (linea) => this.AgregarFilaDatatable(linea);\r\n        this.gestionLineas.onLineasActualizado = (linea) => this.ActualizarFilaDatatable(linea);\r\n        JQValidations.MaxFileSizeValidation();\r\n        JQValidations.AllowedExtensionsValidation();\r\n\r\n    }\r\n\r\n    private InicializarButtons() {\r\n\r\n        var table = document.getElementById(\"data-table-lineas\");\r\n        var lineaAdd = document.getElementById(\"linea-add\");\r\n\r\n        table.on('click', '.linea-action', event => {\r\n\r\n            if (event.target.matches(\".linea-edit\"))\r\n                this.EditarLinea(event.target as HTMLElement);\r\n\r\n            else if (event.target.matches(\".linea-delete\"))\r\n                this.BorrarLinea(event.target as HTMLElement);\r\n\r\n        });\r\n\r\n        lineaAdd.addEventListener('click', event => this.CrearLinea());\r\n    }\r\n\r\n    private async BorrarLinea(element: HTMLElement) {\r\n\r\n        let lineaId    = element.dataset.lineaid;\r\n        let terminalId = element.dataset.terminalid;\r\n        let terminal   = element.dataset.terminal;\r\n        var payload    = { IdLinea: lineaId, IdTerminal: terminalId };\r\n\r\n        const confirm = new ConfirmModalMessage(\"Eliminar Línea\", \"¿Desea eliminar la Línea \" + lineaId + \" de la terminal \" + terminal + \"?\", \"Aceptar\", \"Cancelar\");\r\n        const shouldDelete = await confirm.Confirm();\r\n\r\n        if (shouldDelete) {\r\n\r\n            const httpService = new HttpFetchService();\r\n            httpService.Post<IMessageResponse>('/Lineas/BorrarLinea', payload)\r\n                .then((data) => {\r\n                    if (data.Result)\r\n                        this.BorrarFilaDatatable(element);\r\n                    M.toast({ html: data.Message, classes: (data.Result) ? \"succes\" : \"error\" });\r\n\r\n                }).catch((error) => {\r\n                    M.toast({ html: error, classes: \"error\" });\r\n                });\r\n        }\r\n    }\r\n\r\n    private CrearLinea() {\r\n        this.gestionLineas.NuevoLinea();\r\n    }\r\n\r\n    private EditarLinea(element: HTMLElement): void {\r\n        this.gestionLineas.DatosLinea(element.dataset.lineaid, element.dataset.terminalid, true);\r\n    }\r\n\r\n    //Funcion para borrar linea del datatable\r\n    private BorrarFilaDatatable(element: HTMLElement) {\r\n\r\n        var $tr = $(element).closest(\"tr\");\r\n        if ($tr.prev().hasClass(\"parent\")) {\r\n            let row = this.Table.row($tr.prev());\r\n            row.remove();\r\n            row.draw();\r\n        }\r\n        let row = this.Table.row($tr);\r\n        row.remove();\r\n        row.draw();\r\n    }\r\n\r\n    // agregar una nueva linea\r\n    private AgregarFilaDatatable(linea: Linea) {\r\n\r\n        let newLinea = this.Table.row.add([\r\n            linea.Terminal,\r\n            linea.Idlinea,\r\n            linea.Producto,\r\n            '<span class=\"chip lighten-5 ' + linea.EstadoColor + ' ' + linea.EstadoColor + '-text\">' + linea.Estado + '</span>',\r\n            linea.Capacidad,\r\n            linea.DensidadAforo,\r\n            linea.Observaciones,\r\n            '<a class=\"cursor-point ' + this.DisableAction(this.Permisions.Editar) + '\" data-turbolinks=\"false\">' +\r\n            '<i class=\"material-icons linea-action linea-edit\" data-lineaid=\"' + linea.Idlinea + '\" data-terminalid=\"' + linea.IdTerminal + '\" data-terminal=\"' + linea.Terminal + '\">edit</i>' +\r\n            '</a>' +\r\n            '<a class=\"cursor-point ' + this.DisableAction(this.Permisions.Borrar) + '\" data-turbolinks=\"false\">' +\r\n            '<i class=\"material-icons linea-action linea-delete\" data-lineaid=\"' + linea.Idlinea + '\" data-terminalid=\"' + linea.IdTerminal + '\" data-terminal=\"' + linea.Terminal + '\">delete</i>' +\r\n            '</a>'\r\n        ]);\r\n        (this.Table.row(newLinea).node() as HTMLElement).id = linea.Idlinea + \"-\" + linea.IdTerminal;\r\n        newLinea.draw(false);\r\n    }\r\n\r\n    // Actualizar una linea\r\n    private ActualizarFilaDatatable(linea: Linea) {\r\n\r\n        let row = $(\"tr#\" + linea.Idlinea + \"-\" + linea.IdTerminal);\r\n        var line = this.Table.row(row).data();\r\n        line[0] = linea.Terminal;\r\n        line[1] = linea.Idlinea;\r\n        line[2] = linea.Producto;\r\n        line[3] = '<span class=\"chip lighten-5 ' + linea.EstadoColor + ' ' + linea.EstadoColor + '-text\">' + linea.Estado + '</span>';\r\n        line[4] = linea.Capacidad;\r\n        line[5] = linea.DensidadAforo;\r\n        line[6] = linea.Observaciones;\r\n        this.Table.row(row).data(line);\r\n    }\r\n\r\n    //Formatear inputs\r\n    private RegistrarFormatos() {\r\n\r\n        //registrar mascaras\r\n        this._maskManager.RegisterMasks(\r\n            [\r\n                MaskFormats.IntegerFormat(),\r\n                MaskFormats.DecimalFormat()\r\n            ]);\r\n\r\n        //registrar mascaras \r\n        //this._maskManager.RegisterMasks(\r\n        //    [\r\n        //        MaskFormats.IntegerFormatRang('#linea-Capacidad', 0, 5000000),\r\n        //        MaskFormats.DecimalFormatRang('#linea-densidad', 0, 100),\r\n        //    ]);\r\n    }\r\n\r\n    //Obtiene clase disable dependiendo del permiso\r\n    private DisableAction(habilitado: boolean): string {\r\n        return habilitado ? \"\" : \"disable-action\";\r\n    }\r\n\r\n}\r\n\r\n\r\nvar lineasPage = new LineasPage();\r\n\r\n// Called after every non-initial page load\r\ndocument.addEventListener('turbolinks:render', (e: any) => {\r\n    if (document.URL.indexOf('/Lineas/Index') != -1) {\r\n        if (lineasPage) {\r\n            lineasPage.Init();\r\n        }\r\n        else {\r\n            lineasPage = new LineasPage();\r\n        }\r\n        //console.log(e.data.url);\r\n    }\r\n    else\r\n        lineasPage?.Destroy();\r\n});","//import 'datatables.net';\r\nimport 'datatables.net-responsive';\r\n\r\nexport class ConfigureDataTable {\r\n\r\n    public Configure(id: string, columns?: DataTables.ColumnDefsSettings[]): DataTables.Api {\r\n        \r\n        let table = $(id).DataTable({\r\n            columnDefs: columns,\r\n            destroy: true,\r\n            responsive: true,\r\n            language: {\r\n                \"processing\": \"Procesando...\",\r\n                \"lengthMenu\": \"Mostrar _MENU_ registros\",\r\n                \"zeroRecords\": \"No se encontraron resultados\",\r\n                \"emptyTable\": \"Ningún dato disponible en esta tabla\",\r\n                \"info\": \"Mostrando del _START_ al _END_ de _TOTAL_ registros\",\r\n                \"infoEmpty\": \"Mostrando del 0 al 0 de 0 registros\",\r\n                \"infoFiltered\": \"(filtrado de un total de _MAX_ registros)\",\r\n                \"search\": \"Buscar:\",\r\n                \"thousands\": \",\",\r\n                \"loadingRecords\": \"Cargando...\",\r\n                \"paginate\": {\r\n                    \"first\": \"Primero\",\r\n                    \"last\": \"Último\",\r\n                    \"next\": \"Siguiente\",\r\n                    \"previous\": \"Anterior\"\r\n                },\r\n                \"aria\": {\r\n                    \"sortAscending\": \": Activar para ordenar la columna de manera ascendente\",\r\n                    \"sortDescending\": \": Activar para ordenar la columna de manera descendente\"\r\n                }\r\n            }\r\n        });\r\n\r\n        this.FilterGlobal(table);\r\n\r\n        return table;\r\n    }\r\n\r\n    public ConfigureScrollX(id: string, columns?: DataTables.ColumnSettings[], columnsDef?: DataTables.ColumnDefsSettings[], inputId?): DataTables.Api {\r\n\r\n        let table = $(id).DataTable({\r\n            columnDefs: columnsDef,\r\n            columns: columns,\r\n            destroy: true,\r\n            scrollX: true,\r\n            language: {\r\n                \"processing\": \"Procesando...\",\r\n                \"lengthMenu\": \"Mostrar _MENU_ registros\",\r\n                \"zeroRecords\": \"No se encontraron resultados\",\r\n                \"emptyTable\": \"Ningún dato disponible en esta tabla\",\r\n                \"info\": \"Mostrando del _START_ al _END_ de _TOTAL_ registros\",\r\n                \"infoEmpty\": \"Mostrando del 0 al 0 de 0 registros\",\r\n                \"infoFiltered\": \"(filtrado de un total de _MAX_ registros)\",\r\n                \"search\": \"Buscar:\",\r\n                \"thousands\": \",\",\r\n                \"loadingRecords\": \"Cargando...\",\r\n                \"paginate\": {\r\n                    \"first\": \"Primero\",\r\n                    \"last\": \"Último\",\r\n                    \"next\": \"Siguiente\",\r\n                    \"previous\": \"Anterior\"\r\n                },\r\n                \"aria\": {\r\n                    \"sortAscending\": \": Activar para ordenar la columna de manera ascendente\",\r\n                    \"sortDescending\": \": Activar para ordenar la columna de manera descendente\"\r\n                }\r\n            }\r\n        });\r\n\r\n        this.FilterGlobal(table, inputId);\r\n\r\n        return table;\r\n    }\r\n\r\n    public ConfigureScrollXSinInfo(id: string, columns?: DataTables.ColumnDefsSettings[]): DataTables.Api {\r\n\r\n        let table = $(id).DataTable({\r\n            columnDefs: columns,\r\n            destroy: true,\r\n            scrollX: true,\r\n            paging: false,\r\n            ordering: false,\r\n            searching: false,\r\n            info: false,\r\n            language: {\r\n                \"processing\": \"Procesando...\",\r\n                \"lengthMenu\": \"Mostrar _MENU_ registros\",\r\n                \"zeroRecords\": \"No se encontraron resultados\",\r\n                \"emptyTable\": \"Ningún dato disponible en esta tabla\",\r\n                \"info\": \"Mostrando del _START_ al _END_ de _TOTAL_ registros\",\r\n                \"infoEmpty\": \"Mostrando del 0 al 0 de 0 registros\",\r\n                \"infoFiltered\": \"(filtrado de un total de _MAX_ registros)\",\r\n                \"search\": \"Buscar:\",\r\n                \"thousands\": \",\",\r\n                \"loadingRecords\": \"Cargando...\",\r\n                \"paginate\": {\r\n                    \"first\": \"Primero\",\r\n                    \"last\": \"Último\",\r\n                    \"next\": \"Siguiente\",\r\n                    \"previous\": \"Anterior\"\r\n                },\r\n                \"aria\": {\r\n                    \"sortAscending\": \": Activar para ordenar la columna de manera ascendente\",\r\n                    \"sortDescending\": \": Activar para ordenar la columna de manera descendente\"\r\n                }\r\n            }\r\n        });\r\n        return table;\r\n    }\r\n\r\n    private FilterGlobal(table: DataTables.Api, input?) {\r\n\r\n        if (input) {\r\n            $(`input#${input}`).on(\"keyup click\", function () {\r\n                table.search($(`#${input}`).val().toString(), $(\"#global_regex\").prop(\"checked\"), $(\"#global_smart\").prop(\"checked\")).draw();\r\n            });\r\n        } else {\r\n            $(\"input#global_filter\").on(\"keyup click\", function () {\r\n                table.search($(\"#global_filter\").val().toString(), $(\"#global_regex\").prop(\"checked\"), $(\"#global_smart\").prop(\"checked\")).draw();\r\n            });\r\n        }\r\n\r\n        $(\"input.column_filter\").on(\"keyup click\", function () {\r\n            let column = $(this).parents(\"tr\").attr(\"data-column\");\r\n            table.column(column)\r\n                .search(\r\n                    $(\"#col\" + column + \"_filter\").val().toString(),\r\n                    $(\"#col\" + column + \"_regex\").prop(\"checked\"),\r\n                    $(\"#col\" + column + \"_smart\").prop(\"checked\")\r\n                )\r\n                .draw()\r\n        });\r\n    }\r\n\r\n}","export class ConfirmModalMessage {\r\n\r\n    private parent: HTMLElement;\r\n    private modal: HTMLElement;\r\n    private acceptButton: HTMLButtonElement;\r\n    private dismissButton: HTMLButtonElement;\r\n    private modalInstance: M.Modal;\r\n    private idMesssage: string;\r\n\r\n    constructor(public title: string,\r\n        public message: string,\r\n        public acceptText: string,\r\n        public dismissText: string) {\r\n\r\n        this.idMesssage = \"confirm-message\";\r\n        this.parent = document.body;\r\n        this.CreateModal();\r\n        this.AppendModel();\r\n    }\r\n\r\n    private CreateModal() {\r\n        this.modal = document.createElement(\"div\");\r\n        this.modal.id = this.idMesssage;\r\n        this.modal.classList.add(\"modal\", \"modal-fixed-footer\", \"modal-confirm-message-small\");\r\n\r\n        const content = document.createElement(\"div\");\r\n        content.classList.add(\"modal-content\");\r\n        this.modal.appendChild(content);\r\n\r\n        const header = document.createElement(\"h5\");\r\n        header.textContent = this.title;\r\n        content.appendChild(header);\r\n\r\n        const message = document.createElement(\"p\");\r\n        message.textContent = this.message;\r\n        content.appendChild(message);\r\n\r\n        const buttonGroup = document.createElement(\"div\");\r\n        buttonGroup.classList.add(\"modal-footer\");\r\n        this.modal.appendChild(buttonGroup);\r\n\r\n        this.dismissButton = document.createElement(\"button\");\r\n        this.dismissButton.classList.add(\r\n            \"modal-action\",\r\n            \"waves-effect\",\r\n            \"waves-red\",\r\n            \"btn-flat\",\r\n            \"btn-orange\"\r\n        );\r\n        this.dismissButton.type = \"button\";\r\n        this.dismissButton.textContent = this.dismissText;\r\n        buttonGroup.appendChild(this.dismissButton);\r\n\r\n        this.acceptButton = document.createElement(\"button\");\r\n        this.acceptButton.classList.add(\r\n            \"modal-action\",\r\n            \"waves-effect\",\r\n            \"waves-red\",\r\n            \"btn-flat\",\r\n            \"btn-orange\"\r\n        );\r\n        this.acceptButton.type = \"button\";\r\n        this.acceptButton.textContent = this.acceptText;\r\n        buttonGroup.appendChild(this.acceptButton);\r\n    }\r\n\r\n    private AppendModel() {\r\n        this.parent.appendChild(this.modal);\r\n    }\r\n\r\n    private destroy() {\r\n        if (this.modalInstance) {\r\n            this.modalInstance.close();\r\n            this.modalInstance.destroy();\r\n        }\r\n\r\n        var elem = document.querySelector(\"#\" + this.idMesssage);\r\n        elem.parentNode.removeChild(elem);\r\n    }\r\n\r\n    public async Confirm() {\r\n        return new Promise<boolean>((resolve, reject) => {\r\n\r\n            const somethingWentWrongUponCreation =\r\n                !this.modal || !this.acceptButton || !this.dismissButton;\r\n            if (somethingWentWrongUponCreation) {\r\n                this.destroy();\r\n                reject(\"Fallo algo en la creación del mensaje\");\r\n            }\r\n\r\n            M.Modal.init(this.modal, {\r\n                dismissible: false,\r\n                opacity: .5,\r\n                inDuration: 300,\r\n                outDuration: 200,\r\n                startingTop: '6%',\r\n                endingTop: '8%'\r\n            });\r\n            this.modalInstance = M.Modal.getInstance(this.modal);\r\n            this.modalInstance.open();\r\n\r\n            this.acceptButton.addEventListener(\"click\", () => {\r\n                resolve(true);\r\n                this.destroy();\r\n            });\r\n\r\n            this.dismissButton.addEventListener(\"click\", () => {\r\n                resolve(false);\r\n                this.destroy();\r\n            });\r\n        });\r\n    }\r\n}","// Base class for Http operations GET, PUT, POST, DELETE, PATCH!!\r\nexport class HttpFetchService {\r\n\r\n    public Post<U>(url: string, payload: any, jsonResponse = true): Promise<U> {\r\n        const promise = new Promise<U>((resolve, reject) => {\r\n            fetch(url, {\r\n                method: 'post',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(payload)\r\n            })\r\n                .then(response => (jsonResponse) ? response.json() : response.text())\r\n                .then(data => {\r\n                    resolve(data);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    reject(error);\r\n                })\r\n        });\r\n\r\n        return promise;\r\n    }\r\n\r\n    public PostForm<U>(url: string, payload: any, token: string, jsonResponse = true): Promise<U> {\r\n        const promise = new Promise<U>((resolve, reject) => {\r\n            fetch(url, {\r\n                method: 'post',\r\n                headers: { 'RequestVerificationToken': token },\r\n                body: payload\r\n            })\r\n                .then(response => (jsonResponse) ? response.json() : response.text())\r\n                .then(data => {\r\n                    resolve(data);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    reject(error);\r\n                })\r\n        });\r\n\r\n        return promise;\r\n    }\r\n\r\n    public PostFormURL<U>(url: string, payload: any, jsonResponse = true): Promise<U> {\r\n        const promise = new Promise<U>((resolve, reject) => {\r\n            fetch(url, {\r\n                method: 'post',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: payload\r\n            })\r\n                .then(response => (jsonResponse) ? response.json() : response.text())\r\n                .then(data => {\r\n                    resolve(data);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    reject(error);\r\n                })\r\n        });\r\n\r\n        return promise;\r\n    }\r\n}","import { HttpFetchService } from \"./HttpFetchService\";\r\n\r\nexport const services = [HttpFetchService];\r\n\r\nexport * from \"./HttpFetchService\";","export class ActionsPermission {\r\n    IdArea: string;\r\n    Nombre: string;\r\n    Crear: boolean;\r\n    Borrar: boolean;\r\n    Editar: boolean;\r\n    Detalles: boolean;\r\n    Exportar: boolean;\r\n    Importar: boolean;\r\n}","export class Area {\r\n    IdArea: string;\r\n    Nombre: string;\r\n}","export class Cabezote {\r\n    Placa: string;\r\n}","export class Compañia {\r\n     IdCompañia: string;\r\n     Nombre: string;\r\n     SalesOrganization: string;\r\n     DistributionChannel: string;\r\n     Division: string;\r\n     SupplierType: string;\r\n     CodigoSICOM: string\r\n}","export class Conductor {\r\n    Nombre: string;\r\n    Cedula: string;\r\n}","export class Contador {\r\n    IdContador: string;    \r\n}","\r\nexport class Despacho {\r\n    Value: string;\r\n    Text: string;\r\n    Id_Despacho: string;\r\n    Placa_Cabezote: string;\r\n    Placa_Trailer: string;\r\n    Volumen_Ordenado: string;\r\n    Volumen_Cargado: string;\r\n    Cedula_Conductor: string;\r\n}","export class FechasCorteDTO {\r\n    Fecha: Date;\r\n    Cierre: boolean;\r\n}","import { LineaEstado } from \"./LineaEstado\";\r\n\r\nexport class Linea {\r\n    Linea: string;\r\n    Idlinea: string;\r\n    Terminal: string;\r\n    IdTerminal: string;\r\n    Producto: string;\r\n    Estado: string;\r\n    EstadoColor: string;\r\n    Capacidad: number;\r\n    DensidadAforo: number;\r\n    Observaciones: string;\r\n}","export class Log {\r\n    Id: string;\r\n    FechaEvento: string;\r\n    Aplicacion: string\r\n    Area: string\r\n    Seccion: string\r\n    Accion: string\r\n    Objetivo: string\r\n    Entidad: string\r\n    Prioridad: string\r\n    Comentario: string\r\n}","export class MapeoArchivos {\r\n    Paso1Data: Paso1Mapeo;\r\n    Paso2Data: Paso2Mapeo;\r\n}\r\n\r\nexport class Paso1Mapeo {\r\n    IdMapeo: string;\r\n    Descripcion: string;\r\n    Separador: string;\r\n    OtroCaracter: string;\r\n    Archivo: File;\r\n}\r\n\r\nexport class Paso2Mapeo {\r\n    Columnas: string[];\r\n    TableStep2: DataTables.Api;\r\n}","import { ProductoTipo } from \"./ProductoTipo\";\r\n\r\nexport class Producto {\r\n    IdProducto: string;\r\n    NombreCorto: string;\r\n    NombreERP: string;\r\n    Icono: string;\r\n    Estado: string;\r\n    Tipo: string;\r\n    Clase: string;\r\n    SICOM: string;\r\n    IdTipoNavigation: ProductoTipo;\r\n}","export class Proveedor {\r\n    IdProveedor: string;\r\n    NombreProveedor: string;\r\n    SicomProveedor: string;\r\n}","export class Rol {\r\n    IdRol: string;\r\n    Nombre: string;\r\n    Descripcion: string;\r\n}","import { TanquesEstado } from \"./TanquesEstado\";\r\n\r\nexport class Tanque {\r\n    IconoProducto: string;\r\n    IconoColor: string;\r\n    Tanque: string;\r\n    Producto: string;\r\n    Terminal: string;\r\n    IdTerminal: string;\r\n    ClaseTanque: string;\r\n    ClaseColor: string;\r\n    Estado: string;\r\n    EstadoColor: string;\r\n\r\n    TipoTanque: string;\r\n    CapacidadNominal: number;\r\n    CapacidadOperativa: number;\r\n    VolumenNoBombeable: number;\r\n    AlturaMaximaAforo: number;\r\n    AforadoPor: string;\r\n    FechaAforo: Date;\r\n    PantallaFlotante: string;\r\n    Observaciones: string;\r\n    DensidadAforo: number;\r\n    GalonesPorGrado: number;\r\n    NivelCorreccionInicial: number;\r\n    NivelCorreccionFinal: number;\r\n    \r\n}","export class Terminal {\r\n    IdTerminal: string;\r\n    Nombre: string;\r\n    Direccion: string;\r\n    Telefono: string;\r\n    Superintendente: string;\r\n    Estado: string;\r\n    Area: string;\r\n    CentroCosto: string;\r\n    Poliducto: string;\r\n    TipoInforme: string;\r\n    IdCompania: string;\r\n}","export class Trailer {\r\n    Placa: string;\r\n}","export class Usuario {\r\n    Imagen: File;\r\n    IdUsuario: string;\r\n    Nombre: string;\r\n    Rol: string;\r\n    Email: string;\r\n    Telefono: string;\r\n}","import { IMessageResponse } from \"./MessageResponse\";\r\nimport { Usuario } from \"./Usuario\";\r\nimport { Cabezote } from \"./Cabezote\";\r\nimport { Trailer } from \"./Trailer\";\r\nimport { Conductor } from \"./Conductor\";\r\nimport { Area } from \"./Area\";\r\nimport { Compañia } from \"./Compañia\";\r\nimport { Log } from \"./Log\";\r\nimport { Linea } from \"./Linea\";\r\nimport { Rol } from \"./Rol\";\r\nimport { Terminal } from \"./Terminal\";\r\nimport { Tanque } from \"./Tanque\";\r\nimport { Contador } from \"./Contador\";\r\nimport { Proveedor } from \"./Proveedor\";\r\nimport { MapeoArchivos } from \"./ProcesamientoArchivos\";\r\nimport { Producto } from \"./Producto\";\r\nimport { Despacho } from \"./Despacho\";\r\nimport { FechasCorteDTO } from \"./FechasCorteDTO\";\r\n\r\nexport const models = [Usuario, Cabezote, Trailer, Conductor, Area, Log, Rol, Compañia, Terminal, Tanque, Contador, Linea, Proveedor, MapeoArchivos, Producto, Despacho, FechasCorteDTO];\r\n\r\nexport * from \"./MessageResponse\";\r\nexport * from \"./Usuario\";\r\nexport * from \"./Cabezote\";\r\nexport * from \"./Trailer\";\r\nexport * from \"./Conductor\";\r\nexport * from \"./Area\";\r\nexport * from \"./Linea\";\r\nexport * from \"./Compañia\";\r\nexport * from \"./Rol\";\r\nexport * from \"./Terminal\";\r\nexport * from \"./Tanque\";\r\nexport * from \"./Contador\";\r\nexport * from \"./Log\";\r\nexport * from \"./Proveedor\";\r\nexport * from \"./ProcesamientoArchivos\";\r\nexport * from \"./Producto\";\r\nexport * from \"./Despacho\";\r\nexport * from \"./FechasCorteDTO\";\r\n","declare global {\r\n    interface HTMLElement {\r\n        on(eventType: string, childSelector: string, eventHandler: any): void;\r\n    }\r\n}\r\n\r\nHTMLElement.prototype.on = function (eventType: string, childSelector: string, eventHandler: any): void {\r\n    this.addEventListener(eventType, eventOnElement => {\r\n        if (eventOnElement.target.matches(childSelector)) {\r\n            eventHandler(eventOnElement);\r\n        } else {\r\n            //console.log(eventOnElement.target);\r\n        }\r\n    })\r\n}\r\n\r\nexport { };","import \"jquery-validation\";\r\nimport \"jquery-validation-unobtrusive\";\r\n\r\nexport class JQValidations {\r\n\r\n    public static MaxFileSizeValidation(): void {\r\n        if ($.validator.methods['maxfilesize'])\r\n            return;\r\n\r\n        $.validator.addMethod('maxfilesize', function (value, element, params) {\r\n            let input = (element as HTMLInputElement);\r\n            let size = params, file = (input.files[0] as File);\r\n\r\n            if (file) {\r\n                if ((file.size / 1024) > size) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n\r\n        $.validator.unobtrusive.adapters.add('maxfilesize', ['size'], function (options) {\r\n            //console.log(\"registra maxfilesize en unobtrusive\");\r\n            options.rules['maxfilesize'] = options.params['size'];\r\n            options.messages['maxfilesize'] = options.message;\r\n        });\r\n    }\r\n\r\n    public static AllowedExtensionsValidation(): void {\r\n        if ($.validator.methods['allowedextensions'])\r\n            return;\r\n\r\n        $.validator.addMethod('allowedextensions', function (value, element, params) {\r\n            let input = (element as HTMLInputElement);\r\n            let exts = params, file = (input.files[0] as File);\r\n            let extsArray = exts.split(',');\r\n\r\n            if (file) {\r\n                if ((new RegExp('(' + extsArray.join('|').replace(/\\./g, '\\\\.') + ')$')).test(value)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n\r\n        $.validator.unobtrusive.adapters.add('allowedextensions', ['exts'], function (options) {\r\n            options.rules['allowedextensions'] = options.params['exts'];\r\n            options.messages['allowedextensions'] = options.message;\r\n        });\r\n    }\r\n\r\n    public static NotEqualValidation(): void {\r\n        if ($.validator.methods['notequal'])\r\n            return;\r\n\r\n        $.validator.addMethod('notequal', function (value, element, params) {\r\n            let input = (element as HTMLInputElement);\r\n            let IdName = params, ActualValue = (input.value as string);\r\n            let Id = (<HTMLInputElement>document.getElementById(IdName)).value;\r\n\r\n            //console.log(\"ActualValue: \" + ActualValue);\r\n            //console.log(\"size: \" + IdName);\r\n            //console.log(\"input: \" + input);\r\n            //console.log(\"value: \" + value);\r\n            //console.log(\"Id: \" + Id);\r\n\r\n            if (ActualValue) {\r\n                if (ActualValue == Id) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n\r\n        $.validator.unobtrusive.adapters.add('notequal', ['IdinputTocompare'], function (options) {\r\n            options.rules['notequal'] = options.params['IdinputTocompare'];\r\n            options.messages['notequal'] = options.message;\r\n        });\r\n    }\r\n}","import { format, parse, parseISO, toDate } from \"date-fns\";\r\nimport IMask, { InputMask, Masked, MaskedDate, MaskedDynamic, MaskedNumber } from \"imask\";\r\n\r\nexport class MaskFormats {\r\n\r\n    public static IntegerFormat(): IMaskFormat {\r\n        return {\r\n            Selector: \".formato-int\",\r\n            Mask: {\r\n                mask: Number,\r\n                scale: 0,\r\n                signed: false,\r\n                thousandsSeparator: ',',\r\n                padFractionalZeros: false,\r\n                normalizeZeros: true,\r\n                radix: '.',\r\n                mapToRadix: ['.']\r\n            }\r\n        };\r\n    }\r\n\r\n    public static DecimalFormat(): IMaskFormat {\r\n        return {\r\n            Selector: \".formato-decimal\",\r\n            Mask: {\r\n                mask: Number,\r\n                scale: 2,\r\n                signed: false,\r\n                thousandsSeparator: ',',\r\n                padFractionalZeros: false,\r\n                normalizeZeros: true,\r\n                radix: '.',\r\n                mapToRadix: ['.']\r\n            }\r\n        };\r\n    }\r\n\r\n    public static DateShortFormat(): IMaskFormat {\r\n        return {\r\n            Selector: \".formato-fecha-corta\",\r\n            Mask: {\r\n                mask: '00{/}MMM{/}0000',\r\n                overwrite: true,\r\n                autofix: true,\r\n                blocks:\r\n                {\r\n                    MMM: {\r\n                        mask: IMask.MaskedEnum,\r\n                        enum: ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic']\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    public static DateLongFormat(): IMaskFormat {\r\n        return {\r\n            Selector: \".formato-fecha-larga\",\r\n            Mask: {\r\n                mask: '00{/}MMM{/}0000{ }HH{:}TT{:}TT',\r\n                overwrite: true,\r\n                autofix: true,\r\n                blocks:\r\n                {\r\n                    MMM: {\r\n                        mask: IMask.MaskedEnum,\r\n                        enum: ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic']\r\n                    },\r\n                    HH: {\r\n                        mask: IMask.MaskedRange,\r\n                        from: 0,\r\n                        to: 24\r\n                    },\r\n                    TT: {\r\n                        mask: IMask.MaskedRange,\r\n                        from: 0,\r\n                        to: 59\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    public static IntegerFormatRang(selector, rangoMinimo, rangoMaximo): IMaskFormat {\r\n        return {\r\n            Selector: selector,\r\n            Mask: {\r\n                mask: Number,\r\n                min: rangoMinimo,\r\n                max: rangoMaximo,\r\n                scale: 0,\r\n                signed: false,\r\n                thousandsSeparator: ',',\r\n                padFractionalZeros: false,\r\n                normalizeZeros: true,\r\n                radix: '.',\r\n                mapToRadix: ['.']\r\n            }\r\n        };\r\n    }\r\n\r\n    public static DecimalFormatRang(selector, rangoMinimo, rangoMaximo): IMaskFormat {\r\n        return {\r\n            Selector: selector,\r\n            Mask: {\r\n                mask: Number,\r\n                min: rangoMinimo,\r\n                max: rangoMaximo,\r\n                scale: 2,\r\n                signed: false,\r\n                thousandsSeparator: ',',\r\n                padFractionalZeros: false,\r\n                normalizeZeros: true,\r\n                radix: '.',\r\n                mapToRadix: ['.']\r\n            }\r\n        };\r\n    }\r\n\r\n    public static Alfanumerico(selector): IMaskFormat {\r\n        return {\r\n            Selector: selector,\r\n            Mask: {   \r\n                mask: /^[a-z0-9]+$/i,\r\n                lazy: false\r\n            }\r\n        };\r\n    }\r\n\r\n    public static NumericoSinSignos(selector): IMaskFormat {\r\n        return {\r\n            Selector: selector,\r\n            Mask: {\r\n                mask: /^[0-9]+$/i,\r\n                lazy: false\r\n            }\r\n        };\r\n    }\r\n\r\n}\r\n\r\nexport interface IMaskFormat {\r\n    Selector: string;\r\n    Mask: any | IMask.AnyMaskedOptions | IMask.AnyMaskedOptionsMasked | IMask.MaskedOptions<typeof Masked>;\r\n}","import IMask, { InputMask, Masked, MaskedNumber } from \"imask\";\r\nimport { IMaskFormat } from \"./MaskFormats\";\r\n\r\nexport class MaskFormatsManager {\r\n\r\n    private Masks: Array<IMaskFormat>;\r\n    private FormatElements: Array<IMaskElement>;\r\n\r\n    constructor() {\r\n        this.FormatElements = new Array<IMaskElement>();\r\n    }\r\n\r\n    public RegisterMasks(masks: Array<IMaskFormat>) {\r\n        this.CleanAll();\r\n        this.Masks = masks;\r\n    }\r\n\r\n    public ApplyMasks() {\r\n\r\n        this.CleanFormats();\r\n\r\n        this.Masks?.forEach((element, index, object) => {\r\n            this.ApplyFormat(element);\r\n        });\r\n    }\r\n\r\n    public AddApplyMask(mask: IMaskFormat) {\r\n        this.Masks.push(mask);\r\n        this.ApplyFormat(mask);\r\n    }\r\n\r\n    public UnmaskFormats() {\r\n        this.FormatElements?.forEach((element, index, object) => {\r\n            element.MaskInput.el['input'].value = element.MaskInput.unmaskedValue;\r\n            element.MaskInput.masked.reset();\r\n        });\r\n    }\r\n\r\n    public SetUnmaskedFormValue(formData: FormData) {\r\n\r\n        this.FormatElements?.forEach((element, index, object) => {\r\n            formData.set(element.MaskInput.el['input'].name, element.MaskInput.unmaskedValue);\r\n            element.MaskInput.masked.reset();\r\n        });\r\n    }\r\n\r\n    public UpdateValue(selectors: string[]) {\r\n\r\n        if (selectors?.length > 0) {\r\n            selectors.forEach((val) => {\r\n                let formatEl = this.FormatElements.filter(e => e.Selector === val);\r\n                if (formatEl?.length > 0) {\r\n                    formatEl.forEach((el) => {\r\n                        el.MaskInput.updateValue();\r\n                        el.MaskInput.unmaskedValue = el.MaskInput.el.value;\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    private ApplyFormat(mask: IMaskFormat) {\r\n        var fields = document.querySelectorAll<HTMLElement>(mask.Selector);\r\n        fields.forEach((element) => {\r\n            this.FormatElements.push({\r\n                Selector: mask.Selector, MaskInput: IMask(element, mask.Mask)\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    private CleanAll() {\r\n\r\n        if (this.Masks?.length > 0)\r\n            this.Masks.forEach((element, index, object) => {\r\n                object.splice(index, 1);\r\n            });\r\n\r\n        this.CleanFormats();\r\n\r\n    }\r\n\r\n    private CleanFormats() {\r\n        if (this.FormatElements?.length > 0)\r\n            this.FormatElements.forEach((element, index, object) => {\r\n                element.MaskInput.masked.reset();\r\n                element.MaskInput.destroy;\r\n                object.splice(index, 1);\r\n            });\r\n    }\r\n\r\n    public Destroy() {\r\n        this.CleanAll();\r\n        this.Masks = null;\r\n        this.FormatElements = null;\r\n    }\r\n\r\n}\r\n\r\nexport interface IMaskElement {\r\n    Selector: string;\r\n    MaskInput: InputMask<IMask.AnyMaskedOptions>;\r\n}\r\n","\r\nexport class SelectorMenu {\r\n\r\n    public static SeleccionEnElMenu(): void {\r\n        //Poner active a la opción especifica del menu\r\n        let url = location.href;\r\n        let contador = url.indexOf(\"/\", 8);\r\n        let cade = url.substr(contador, url.length);\r\n        let selector = \"a[href$='\" + cade + \"']\";\r\n        $('.nav-list li a').removeClass('active');\r\n\r\n        //Desplegar segundo nivel\r\n        $(\".collapsible-body\").css({ 'display': '' });\r\n        $('.listaPadre').removeClass('active');\r\n        $(selector).addClass('active');\r\n        let identi = $(selector).attr('name');\r\n\r\n        $('#' + identi).addClass('active'); // los que estan debajo de este, con una funcion poner .css({ 'display': 'block' })\r\n        $(\"#\" + identi + \" .collapsible-body\").css({ 'display': 'block' });\r\n\r\n        //Desplegar primer nivel\r\n        let identi2 = $('#' + identi).attr('name');\r\n        $('#' + identi2).addClass('active');\r\n        $(\"#\" + identi2 + \" #\" + identi + \" .collapsible-body\").css({ 'display': 'block' });\r\n        $(\"#\" + identi2 + \" .nivel2\").css({ 'display': 'block' });\r\n        $(\"#\" + identi2 + \" .collapsible-body\").first().css({ 'display': 'block' });\r\n    }\r\n}","import { JQValidations } from \"./JQValidations\";\r\nimport { MaskFormats } from \"./MaskFormats\";\r\nimport { MaskFormatsManager } from \"./MaskFormatsManager\";\r\nexport const components = [JQValidations, MaskFormats, MaskFormatsManager];\r\n\r\nexport * from \"./JQValidations\";\r\nexport * from \"./MaskFormats\";\r\nexport * from \"./MaskFormatsManager\";","export * from './Http';\r\nexport * from './Models';\r\nexport * from './Utils/HTMLExtensions';","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n// It's empty as some runtime module handles the default behavior\n__webpack_require__.x = x => {};\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"lineas\": 0\n};\n\nvar deferredModules = [\n\t[\"./Scripts/Pages/Lineas/Lineas.ts\",\"packages\"]\n];\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\nvar checkDeferredModules = x => {};\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime, executeModules] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n\t// add entry modules from loaded chunk to deferred list\n\tif(executeModules) deferredModules.push.apply(deferredModules, executeModules);\n\n\t// run deferred modules when all chunks ready\n\treturn checkDeferredModules();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkkairosv2\"] = self[\"webpackChunkkairosv2\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\n\nfunction checkDeferredModulesImpl() {\n\tvar result;\n\tfor(var i = 0; i < deferredModules.length; i++) {\n\t\tvar deferredModule = deferredModules[i];\n\t\tvar fulfilled = true;\n\t\tfor(var j = 1; j < deferredModule.length; j++) {\n\t\t\tvar depId = deferredModule[j];\n\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferredModules.splice(i--, 1);\n\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n\t\t}\n\t}\n\tif(deferredModules.length === 0) {\n\t\t__webpack_require__.x();\n\t\t__webpack_require__.x = x => {};\n\t}\n\treturn result;\n}\nvar startup = __webpack_require__.x;\n__webpack_require__.x = () => {\n\t// reset startup function so it can be called again when more startup code is added\n\t__webpack_require__.x = startup || (x => {});\n\treturn (checkDeferredModules = checkDeferredModulesImpl)();\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"sourceRoot":""}